rd_("BgThe <code>==</code> operator (equality)0AoThe <code>fn_</code> lang item.CjA fn pointer. Last element of the vector is the return \xe2\x80\xa610CjThe <code>&gt;=</code> operator (greater than or equal to)0BmThe <code>&gt;</code> operator (greater than)0CbDefault mode, where spans are identified by an ID.CgThe <code>&lt;=</code> operator (less than or equal to)0BjThe <code>&lt;</code> operator (less than)0BkThe <code>!=</code> operator (not equal to)0AjContains the success value00000000000DbGeneral type variable <code>?T</code> that can be unified with \xe2\x80\xa6BkEquivalent to <code>Infer(TyVar(_))</code>.10CjA nice interface for working with the infcx. The basic \xe2\x80\xa60F`Create a new <code>TextRange</code> with the given <code>offset</code> and <code>len</code> (\xe2\x80\xa600000CnRe-exports various subcrates databases so that the calling \xe2\x80\xa6CcDefines database &amp; queries for name resolution.CcDefines database &amp; queries for macro expansion.AcThe database handleDeThe home of <code>HirDatabase</code>, which is the Salsa database \xe2\x80\xa6BfMakes <code>expected == actual</code>.0jPackage idCaThe text size of some primitive text-like object.00000FbConverts from <code>Parse&lt;T&gt;</code> to <code>Result&lt;T, Vec&lt;SyntaxError&gt;&gt;</code>.Ef<code>tt</code> crate defines a <code>TokenTree</code> data structure: this is the \xe2\x80\xa6ClReturns the type as in the signature of the struct. Only \xe2\x80\xa6CcReturns the type as in the signature of the struct.CnTurns this ADT into a type. Any type parameters of the ADT \xe2\x80\xa6AjGet type of the type tree.C`Type which must match the generic <code>G</code>CjThe generic type containing the generic parameter that \xe2\x80\xa60001AeAbsolute path (::foo)0AoThe <code>add</code> lang item.BfThe <code>+</code> operator (addition)10ChAlgebraic data types (ADT). For example: structures, \xe2\x80\xa6kA Data Type1AoAll assists should be resolved.00CkEnum for representing extracted format string args. Can \xe2\x80\xa6Ad<code>asm!()</code>.gAn itemAoThe <code>div</code> lang item.BfThe <code>/</code> operator (division)10a.AhContains the error value00000000000DfThe index of a value allocated in an arena that holds <code>T</code>s.CoA primitive signed integer type. For example, <code>i32</code>.DiIntegral type variable <code>?I</code> (that can only be unified with \xe2\x80\xa610ChYields the length of the place, as a <code>usize</code>.0CnAny kind of Cargo lib crate-type (dylib, rlib, proc-macro, \xe2\x80\xa60ClA collection containing zero or one values for any given \xe2\x80\xa6BkDesugars doc comments as quoted raw stringsAoThe <code>mul</code> lang item.BlThe <code>*</code> operator (multiplication)10BbData is mutable and not aliasable.0AoThe <code>neg</code> lang item.BhThe <code>-</code> operator for negation1n<code>-</code>10AoThe <code>not</code> lang item.CaThe <code>!</code> operator for logical inversion1n<code>!</code>10ClMerge all imports into a single use statement as long as \xe2\x80\xa60CmSame as default but wraps the root use tree in a use tree \xe2\x80\xa6CmA pattern newtype. Takes any type and restricts its valid \xe2\x80\xa6BhClose relative to rustc\xe2\x80\x99s hir::PatKind1AoThe <code>pin</code> lang item.0AjConverts from T to &amp;T.CgCreates a reference of the indicated kind to the place.CgA reference; a pointer with an associated lifetime. \xe2\x80\xa6Bl<code>move</code> keyword was not specified.CfAnnotated as <code>ref</code>, like <code>ref x</code>423i&amp;selfAoThe <code>rem</code> lang item.BeThe <code>%</code> operator (modulus)10AaCan run a binary.AoThe <code>shl</code> lang item.BoThe <code>&lt;&lt;</code> operator (shift left)10AoThe <code>shr</code> lang item.C`The <code>&gt;&gt;</code> operator (shift right)10CkThe pointee of a string slice. Written as <code>str</code>.0AoThe <code>sub</code> lang item.BiThe <code>-</code> operator (subtraction)10AoThe <code>Try</code> lang item.0GgPrefix using Windows\xe2\x80\x99 <em><strong>U</strong>niform <strong>N</strong>aming <strong>C</strong>onvention</em>, e.g. \xe2\x80\xa6AlYields the operand unchanged0cuseChStorage for all file changes and the file id to path \xe2\x80\xa6CcNo <code>#[rust_analyzer::completions(...)]</code>.0BlABI-related things in the next-trait-solver.0BjGet a flags value with all known bits set.00000000000DhAbstract Syntax Tree, layered on top of untyped <code>SyntaxNode</code>sDicfg defines conditional compiling options, <code>cfg</code> attribute \xe2\x80\xa6CjVarious batch processing tasks, intended primarily for \xe2\x80\xa6AhZero-based UTF-8 offset.0kZero-based.AoThe syntax context of the span.0000BnThe current working directory of the runnable.CjThe dir being loaded, <code>None</code> if its for a file.AlThe end point of this range.0BcReturns the end of the index range.1111CdEnvironment variables to set during macro expansion.B`Specifies environment variables.AgCheck whether it is eofBdrust-analyzer extensions to the LSP.CcWhile the parent module defines basic atomic \xe2\x80\x9c\xe2\x80\xa6CkGet a name from current module scope, legacy macros are \xe2\x80\xa6BkGets a reference to the value in the entry.ChReturns a reference to the value associated with the \xe2\x80\xa6CnUses <code>rustc --print cfg</code> to fetch the builtin cfgs.CaUses <code>rustc --print target-spec-json</code>.AcFor cargo, runs \xe2\x80\xa6CmReturns a reference to the value stored in the collection \xe2\x80\xa6CdHIR (previously known as descriptors) provides a \xe2\x80\xa6CeThis module describes hir-level representation of \xe2\x80\xa6Ceide crate provides \xe2\x80\x9cide-centric\xe2\x80\x9d APIs for the \xe2\x80\xa6DcThe <code>DefId</code> and args of the opaque type causing this \xe2\x80\xa60BcReturns the number of stored paths.CgReturns the total number of atoms changed by this diff.ChReturns the number of segments in the path (counting \xe2\x80\xa6CgNumber of following token trees that belong to this \xe2\x80\xa60CiNumber of Generic parameters (type_or_consts + lifetimes)12BhReturns the length of the original text.AgThe size of this range.0B`Returns the length of the arena.211CaReturns the length of <code>self</code> in bytes.2258BjReturns the number of sets currently held.CeThe path to the dynamic library containing the macro.BdThis stores the param and its index.0C`Custom LSP definitions and protocol conversions.CkComputes the least-upper-bound, or mutual supertype, of twoCkComputes the least-upper-bound, or mutual supertype, of \xe2\x80\xa610DkMaps a <code>TextRange</code> relative to the documentation string back \xe2\x80\xa6Di<code>mbe</code> (short for Macro By Example) crate contains code for \xe2\x80\xa6BbMIR definitions and implementation0ClDefines messages for cross-process message passing based \xe2\x80\xa6DcCreate <code>Version</code> with an empty pre-release and build \xe2\x80\xa6CkCreates a crate name, checking for dashes in the string \xe2\x80\xa6AeCreate a new CfgDiff.ChCreates an instance that\xe2\x80\x99s strongly coupled to its \xe2\x80\xa6CiCreates switch targets from an iterator of values and \xe2\x80\xa60CkReturns a <code>LineIndex</code> for the <code>text</code>.F`Creates a new <code>TextRange</code> with the given <code>start</code> and <code>end</code> (\xe2\x80\xa6DlCreates a new instance of <code>TextSize</code> from a raw <code>u32</code>.410CnCreates a new index range inclusive of the start value and \xe2\x80\xa6AhCreates a new empty map.AjCreates a new empty arena.543CoDirectly wraps a string slice as a <code>Utf8Path</code> slice.BlAllocates an empty <code>Utf8PathBuf</code>.CfCreates a new MacroDylib instance with the given path.BbCreate a new ProjectJson instance.87fPanicsCaConstructs a new instance of the variance marker.00000EaConstructs a <code>SmolStr</code> from a <code>str</code>, heap-allocating if \xe2\x80\xa6;:C`Creates a new empty <code>SmolStrBuilder</code>.AaCreates new Node.CoCreates a syntax editor to start editing from <code>root</code>>=DgThe bitwise negation (<code>!</code>) of the bits in a flags value, \xe2\x80\xa600000000000BlPGO (Profile-Guided Optimization) utilities.CoRemove the last component of <code>self</code> if there is one.DhEquivalent of <code>Utf8PathBuf::pop</code> for <code>AbsPathBuf</code>.ChTruncates <code>self</code> to <code>self.parent</code>.12ChThis points to the whole syntax node of the declaration.DjSearches for <code>patterns</code>, printing debug information for any \xe2\x80\xa6GkCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is \xe2\x80\xa600000000000CiUtilities for mapping between hir IDs and the surface \xe2\x80\xa6BiMakes <code>expected &lt;: actual</code>.DmChecks whether <code>expected</code> is a subtype of <code>actual</code>: \xe2\x80\xa6CeThe intersection of a source flags value with the \xe2\x80\xa60000000002100DmMakes <code>actual &lt;: expected</code>. For example, if type-checking a \xe2\x80\xa6DoChecks whether <code>expected</code> is a supertype of <code>actual</code>: \xe2\x80\xa610CmModule defining all known symbols required by the rest of \xe2\x80\xa60BdPrimitive tree editor, ed for trees.DhBit representation of the discriminant (e.g., <code>-128i8</code> is \xe2\x80\xa60AcVirtual File SystemCeAn anonymous region parameter for a given fn (&amp;T)0Dkeg. <code>#[doc(hidden)]</code>, <code>#[doc(alias = &quot;x&quot;)]</code>AmA procedural attribute macro.CnMacros inside attributes, i.e. attribute macros and derive \xe2\x80\xa61BcAn attribute-like procedural macro.CcFunction-like macros, suffixed with <code>!</code>.BkThe body of an item (function, const etc.).BmDiagnostics that come from types in the body.CiThe primitive boolean type. Written as <code>bool</code>.0B`The <code>CStr</code> lang item.0DeRoughly speaking, evaluates the <code>func</code> operand and the \xe2\x80\xa60CePerforms essentially all of the casts that can be \xe2\x80\xa60CnThe primitive character type; holds a Unicode scalar value \xe2\x80\xa60B`The <code>copy</code> lang item.BkCreates a value by loading the given place.10C`Prefix <code>C:</code> for the given disk drive.B`The <code>drop</code> lang item.ChThe behavior of this statement differs significantly \xe2\x80\xa610BgUnevaluated non-const-item, used by \xe2\x80\xa6ClType tree shows how can we get from set of types to some \xe2\x80\xa6CnAn expression inside a pattern. That can only occur inside \xe2\x80\xa62ClNote that non-inline modules, by definition, live inside \xe2\x80\xa6Ameg. <code>#[cfg(test)]</code>0Aoeg. <code>#[doc(hidden)]</code>CoThis is a glob-import of all names in the <code>ModPath</code>.CeBlock has one successor; we continue execution there.0D`<code>\xe2\x80\xa6</code>, which is the <code>TYPE_HINT_TRUNCATION</code>0B`See <code>VerifyIfEq</code> docs0CgFlatten imports so that each has its own use statement.DjProject workspace was specified using a <code>rust-project.json</code> \xe2\x80\xa6CmCrates that are provided by the language, like std, core, \xe2\x80\xa6Ad<code>{:&lt;}</code>B`The operator is left-associativeClIndicates possibility of many different options that all \xe2\x80\xa6CnCreates a value by performing loading the place, just like \xe2\x80\xa60Dj<code>Name</code> is a wrapper around string, which is used in hir for \xe2\x80\xa60ClNo additional information - this is the default. We will \xe2\x80\xa6000BhDo nothing special in regards visibilityAnNo assists should be resolved.00iNo value.CdNo leaves at offset \xe2\x80\x93 possible for the empty file.AoThe operator is not associativeCfPlace a placeholder snippet in place of the element(s)CkThis might refer to a variable if a single segment path \xe2\x80\xa6EaLooking up a path like <code>Vec::new</code> or <code>Vec::default</code>: We \xe2\x80\xa6DfA path, qualified (<code>std::collections::HashMap</code>) or not (\xe2\x80\xa6BmExplicit path for the rustc source directory.AhThe <code>+</code> flag.B`The <code>Poll</code> lang item.0BgThe module id of a crate or block root.0DjA <code>VersionReq</code> with no constraint on the version numbers it \xe2\x80\xa6a;BbSome value of type <code>T</code>.B`The <code>sync</code> lang item.0BhOnly for test purpose to keep real typesDaA primitive unsigned integer type. For example, <code>u32</code>.0CcCollection of assorted algorithms for syntax trees.CmArguments the function is called with. These are owned by \xe2\x80\xa6C`The parameters of the associated or opaque item.C`The parameters of the associated or opaque type.1CjThe generic arguments to the associated type. e.g. For \xe2\x80\xa6123CgThe arguments passed to <code>Runnable::program</code>.CkA higher level attributes based on TokenTree, with also \xe2\x80\xa6AnGet the underlying bits value.00000000000DeDefines <code>Body</code>: a lowered representation of functions, \xe2\x80\xa6CfBump the cursor, and enters a subtree if it is on one.CnSpecifies configuration options to be enabled. Options may \xe2\x80\xa6ClMacro expansion data, including the macro body, name and \xe2\x80\xa6CkThe data describing this project, such as its dependencies.Dk<code>NameDefinition</code> keeps information about the element we want \xe2\x80\xa6CkSpecifies dependencies of this crate. This must be used \xe2\x80\xa6DjFinds a (potentially minimal) diff, which, applied to <code>from</code>\xe2\x80\xa6CjCleanup to be done if the coroutine is dropped at this \xe2\x80\xa60BnUtilities for computing drop info about types.ClThis module contains functions for editing syntax trees. \xe2\x80\xa6AfEvaluate the constant.B`Evaluate the static initializer.AeThe file in question.DgThe fill character. E.g. the <code>.</code> in <code>{:.&gt;10}</code>.EbFold the cfg by querying all basic <code>Atom</code> and <code>KeyValue</code> \xe2\x80\xa60BeFold impls for the next-trait-solver.0CiForks the inference context, creating a new inference \xe2\x80\xa60AoReturns the argument unchangedkFuel for term search in \xe2\x80\x9cunits of work\xe2\x80\x9dCnInclude <em>all</em> crates, not just crates in the workspace.BcThe function that\xe2\x80\x99s being called.0AmTarget / expected output typeBaCalls <code>U::from(self)</codenIterate over this set\xe2\x80\x99s ids.BlReturns an iterator over the switch targets.BfYield a set of contained flags values.000000000100ClReturns an iterator over the arena indexes and values in \xe2\x80\xa6C`Returns an iterator over the arena\xe2\x80\x99s elements.ClProduces an iterator over the path\xe2\x80\x99s components viewed \xe2\x80\xa6CnA \xe2\x80\x9cParser\xe2\x80\x9d structure for token trees. We use this when \xe2\x80\xa6CeReturns an iterator over the stored ids and their \xe2\x80\xa67EhCreates a new <code>VfsPath</code> with <code>path</code> adjoined to <code>self</code>.EoCreates an owned <code>Utf8PathBuf</code> with <code>path</code> adjoined to <code>self</code>.DcEquivalent of <code>Utf8Path::join</code> for <code>AbsPath</code>.fPanics13AlProtocol functions for json.ClA tracing_subscriber::layer::Layer that exports new-line \xe2\x80\xa6CjThe <code>UseTreeKind</code> of this <code>UseTree</code>.DfWhat kind of position this is. See <code>FormatArgPositionKind</code>.CdWhat item (struct, function, etc) are we completing.AlThe kind of this inlay hint.1BeReturns the type of procedural macro.nKind of targetClWhat kind of metadata are we fetching: workspace, rustc, \xe2\x80\xa6AmReturns kind of this element.0DcThis panics if the <code>SyntaxKind</code> is not statically known.DhConsumes and leaks the <code>Utf8PathBuf</code>, returning a mutable \xe2\x80\xa6BaReturns the given line\xe2\x80\x99s range.kZero-based.100ClThe line number in the original fixture of the beginning \xe2\x80\xa6DkFetch the <code>CustomProcMacroExpander</code>s and their corresponding \xe2\x80\xa6AnSet of initially loaded files.CmThis module contains free-standing functions for creating \xe2\x80\xa6AdName of this module.CkA name that can be used to import the item, relative to \xe2\x80\xa6Cd<code>None</code> for <code>const _: () = ();</code>AoThe name of the declared macro.Ec<code>None</code> only if the type ref is an [<code>TypeRef::ImplTrait</code>]. \xe2\x80\xa6B`The name of the associated type.4AkThe name of the proc macro.AfSee <code>Name</code>.BmThe node of the reference in the (macro-)fileCjThe name the item (struct, trait, enum, etc.) should have.BiReturns the name of the procedural macro.BlName as given in the <code>Cargo.toml</code>DkName as given in the <code>Cargo.toml</code> or generated from the file \xe2\x80\xa6CnPath relative to <code>anchor</code>\xe2\x80\x99s containing directory.0AiPath to the called macro.DgA desugared representation of paths like <code>crate::foo</code> or \xe2\x80\xa6C`Returns the path to the project\xe2\x80\x99s root folder.ClSpecifies the path for this file. It must start with \xe2\x80\x9c/\xe2\x80\xa6CnReturn a <code>PathBuf</code> to use for the given executable.55AjPrecedence representation.DeEquivalent of <code>PathBuf::push</code> for <code>AbsPathBuf</code>.CaExtends <code>self</code> with <code>path</code>.C`Pushes a new span onto the <code>SpanMap</code>.DoAppends the given <code>char</code> to the end of <code>self</code>\xe2\x80\x99s buffer.3DhWe don\xe2\x80\x99t use <code>rand</code> because that is too many things for us.EeReturns sysroot \xe2\x80\x9croot\xe2\x80\x9d directory, where <code>bin/</code>, <code>etc/</code>, \xe2\x80\xa6BjPath to the main source file of the targetBiThe [<code>AstId</code>] of the root nodeCfThe root context, which is the parent of all other \xe2\x80\xa6AiSemantics for the programBjThe <code>+</code> or <code>-</code> flag.AlFile and span related types.DeThe span inside the format string for the full <code>{\xe2\x80\xa6}</code> \xe2\x80\xa6AoThe span of the name or number.BiMissing batteries for standard libraries.CdTake all of the tracked syntax mappings, leaving \xe2\x80\xa6CeActual file contents. All meta comments are stripped.ChReturns a command to run a tool preferring the cargo \xe2\x80\xa6AiThe expanded syntax tree.C`Gets the parsed syntax tree as a typed ast node.BlVarious utilities for the next-trait-solver.0CkVisits every type, including generic arguments, in this \xe2\x80\xa6CkIndicates that the landing pad is finished and that the \xe2\x80\xa60kA Data TypeBaPlace a tabstop before an elementCkA projection, opaque type, free type alias, or inherent \xe2\x80\xa6Cleg. <code>#[doc(alias(&quot;x&quot;, &quot;y&quot;))]</code>kNamed alias2ClThe token cannot join with the following token to form a \xe2\x80\xa6000h&lt;&gt;AnYet another index-based arena.AjThe type is of the elementCoAn array with the given length. Written as <code>[T; N]</code>.01Ce<code>AstId</code> points to an AST node in any file.DbUsed with keywords like <code>async</code> and <code>await</code>.DeDesugared attributes of an item post <code>cfg_attr</code> expansion.0BaThe <code>bitor</code> lang item.BhThe <code>|</code> operator (bitwise or)10CjBound const variable, used only when preparing a trait \xe2\x80\xa6DeBound type variable, used to represent the <code>&#39;a</code> in \xe2\x80\xa610b{}BnAdditional, build-specific data about a crate.BbThe <code>c_void</code> lang item.0DkProject workspace was discovered by running <code>cargo metadata</code> \xe2\x80\xa6CjAttempt to use cargo to query the desired information, \xe2\x80\xa6BaThe <code>clone</code> lang item.0a:a,hConstantBfSome kind of const inference variable.D`Equivalent to <code>ConstKind::Infer(InferConst::Var(_))</code>.10AcConstant operation.Chhir::Crate describes a single crate. It\xe2\x80\x99s the main \xe2\x80\xa6CgMerge imports from the same crate into a single use \xe2\x80\xa60CnA crate points to the root module of a crate and lists the \xe2\x80\xa6Aa<code>{:?}</code>BdDereference once, producing a place.BaThe <code>deref</code> lang item.0n<code>*</code>20CcA type with no valid variants. Must be uninhabited.BaFired before traversing the node.ClA view into a single entry in a map, which may either be \xe2\x80\xa6DfA view into a single location in an <code>Map</code>, which may be \xe2\x80\xa6BbA set of files on the file system.CjA placeholder for a const which could not be computed; \xe2\x80\xa6CnA placeholder for a type which could not be computed; this \xe2\x80\xa610ChImport map entry should strictly match the query string.0ClThis is set in cases where the type matches the expected \xe2\x80\xa6B`This is set in cases like these:CjRequires items with names that exactly match the given \xe2\x80\xa6AcStruct field accessClThe <code>Entry</code> is represented by a raw set of files.CoA primitive floating-point type. For example, <code>f64</code>.DjFloating-point type variable <code>?F</code> (that can only be unified \xe2\x80\xa610ClThe anonymous type of a function declaration/definition. \xe2\x80\xa60BbThe <code>fn_mut</code> lang item.0D`A pointer to a function. Written as <code>fn() -&gt; i32</code>.0CnImport map entry should contain all letters from the query \xe2\x80\xa60CjRequires items with names contain all letters from the \xe2\x80\xa6AfIdentifier or keyword.Db<code>InsertDelete</code> \xe2\x80\x93 a single \xe2\x80\x9catomic\xe2\x80\x9d change to text0BaThe <code>index</code> lang item.0AmInfer the value of the const.BjA type variable used during type checking.AkInfer all elided lifetimes.21BnInput for the parser \xe2\x80\x93 a sequence of tokens.CiThe token can join with the following token to form a \xe2\x80\xa6000ClA type to specify UI label, like an entry in the list of \xe2\x80\xa60BbFired after the node is traversed.BbCrates that are workspace members.BfA local binding (only value namespace)nLocal variableAjA single local definition.CmSpecifies that the definition is a local, and so does not \xe2\x80\xa6BnThe <code>x</code> flag in <code>{:x?}</code>.BiAttribute resolved to an attribute macro.CjUsed to differentiate individual elements within macro \xe2\x80\xa6BiInformation about a match that was found.AhThe <code>-</code> flag.ChNamed region parameters for functions (a in &amp;\xe2\x80\x99a T)Cm<code>{a}</code> or <code>{:a$}</code> or <code>{:.a$}</code>Bf<code>format_args(\xe2\x80\xa6, arg = 1)</code>2AnThe never type <code>!</code>.0CbNiche (values invalid for a type) encoding the \xe2\x80\xa6Aa<code>{:o}</code>CnAttribute resolved to something else that does not require \xe2\x80\xa6AcOther punctutationsoOther operatorsdselfBaThe punctuations of the language.BaThe <code>panic</code> lang item.0AhThe proc-macro panicked.AjA const generic parameter.EeA type parameter; for example, <code>T</code> in <code>fn f&lt;T&gt;(x: T) {}</code>.10Dh<code>Parse</code> is the result of the parsing: a syntax tree and a \xe2\x80\xa6CfCauses paths to not use a self, super or crate prefix.BnThe <code>ModPath</code> is imported normally.11BaThe <code>Range</code> lang item.0CgA region variable. Should not exist outside of type \xe2\x80\xa60Ad<code>{:&gt;}</code>BaThe operator is right-associativeBiCrates that are from the rustc workspace.DdDirectly invoke <code>rustc</code> to query the desired information.BaThe <code>sized</code> lang item.0CkThe pointee of an array slice. Written as <code>[T]</code>.0BaThe <code>start</code> lang item.0Bl<code>self::</code> is <code>Super(0)</code>0AlE.g., <code>Iterator</code>.EmCorresponds to <code>where Foo: Bar&lt;A, B, C&gt;</code>. <code>Foo</code> here would be \xe2\x80\xa61010BiUsed for items in traits and trait impls.BgThe <code>tuple_trait</code> lang item.AbTuple constructionAhThe type is of the tupleCdA tuple type. For example, <code>(i32, bool)</code>.301BlEquivalent to <code>Infer(IntVar(_))</code>.0BaThe <code>unpin</code> lang item.0BnThe <code>X</code> flag in <code>{:X?}</code>.gUTF-16.gUTF-32.AlUsed to hold computed value.Al<code>move |x| y + x</code>.1AfMarks a suspend point.0EfIn addition to a <code>name</code> field, a <code>NavigationTarget</code> may also \xe2\x80\xa6CeAllocates a new value on the arena, returning the \xe2\x80\xa6C`Inserts all of the snippets into the given text.0AmExpansion of associated itemsCkA higher level attributes based on TokenTree, with also \xe2\x80\xa6BdUtility for writing benchmark tests.D`The bitwise or (<code>|</code>) of the bits in two flags values.00000000000DiIf <code>scope</code> refers to a block expression scope, returns the \xe2\x80\xa6BoBound that applies if <code>ty</code> is equal.0BeBuild the <code>FileSetConfig</code>.CiThe workspace as returned by <code>cargo metadata</code>.BaIs this file a cargo script file?BfClears the map, removing all elements.CaEmpties the arena, removing all contained values.DnInvokes <code>clear</code> on the underlying instance of <code>PathBuf</code>.BfCount the number of tokens recursivelyCfExtends the range to cover <code>other</code> as well.00000BdThe discriminant value being tested.0AmEager expansion related utilsCnSome if this is a macro call for an eager macro. Note that \xe2\x80\xa6CkFinds matches for all added rules and returns edits for \xe2\x80\xa6BfGet a flags value with all bits unset.000000000CgCreate a zero-length range at the specified offset (\xe2\x80\xa61AlBuild an empty search scope.20111BiCreates a new empty <code>SpanMap</code>.22CmGets the given key\xe2\x80\x99s corresponding entry in the map for \xe2\x80\xa6CkGets the entry for the given type in the collection for \xe2\x80\xa6DdAdditional <code>cargo metadata</code> error. (only populated if \xe2\x80\xa6BhThings to wrap other things in file ids.CdBuild a empty search scope spanning the given files.0BgGrammar for the command-line arguments.BlFuzzy finds items instead of exact matching.0CkThings which exist to solve practical issues, but which \xe2\x80\xa6CdReturns a short text describing element at position.DfConsumer of <code>tracing</code> data, which prints a hierarchical \xe2\x80\xa6ClReturns the index of the param on the self generics only \xe2\x80\xa6CnWhich argument this position refers to (Ok), or would\xe2\x80\x99ve \xe2\x80\xa61DcAlways <code>0</code> for types that cannot have multiple variants.BdInfer context the next-trait-solver.0BiReturns the crate this module is part of.EfReturns the crate defining this item (or <code>None</code> if <code>self</code> is \xe2\x80\xa6BoReturns the crate this thing is defined within.1CgDefines a new crate and make this file its root module.DkIf <code>scope</code> refers to a labeled expression scope, returns the \xe2\x80\xa6CdShort description of the assist, as shown in the UI.CkLabel in the completion pop up which identifies completion.BkThe actual label to show in the inlay hint.212AfSee <code>Label</code>BdThe name associated with this crate.ClGiven a range [start, end), returns a sorted iterator of \xe2\x80\xa60DiGenerated by <code>cargo codegen lint-definitions</code>, do not edit \xe2\x80\xa6CnGenerates descriptor structures for unstable features from \xe2\x80\xa6EeTransforms <code>ast::Expr</code> into an equivalent <code>hir_def::expr::Expr</code>DkMerges this span map with another span map, where <code>other</code> is \xe2\x80\xa6ClAsserts that the condition is never true and returns its \xe2\x80\xa6DbCreate <code>Version</code> by parsing from string representation.DeCreate <code>VersionReq</code> by parsing from string representation.BaGets the syntax tree of the file.CgRe-parse given tokens using this <code>Reparser</code>.ChParses an <code>ast::Expr</code> from <code>text</code>.BbParses text which looks like this:DdThin wrappers around [<code>camino::path</code>], distinguishing \xe2\x80\xa6CkExecute <code>f</code> then unroll any bindings it creates.0AhA non-empty query stringCaFIXME: It probably should implement in proc-macroCjA simplified version of quote-crate like quasi quote macro1CkThe text range of this span, relative to the anchor. We \xe2\x80\xa600BjThe text range this inlay hint applies to.BoThe range of the reference in the original file22CnGet the lexicographically ordered vector of the underlying \xe2\x80\xa6DkThe rustc workspace loaded for this workspace. An <code>Err(None)</code>\xe2\x80\xa6DgReturns a <code>ModuleScope</code>: a set of items, visible in this \xe2\x80\xa6CdSemantic scope, captures context for the term searchB`Name resolution for expressions.CkSpawns an external process as the proc macro server and \xe2\x80\xa6fPanicsCfSpawn a new handle with the given <code>sender</code>.AnThe start point of this range.0BeReturns the start of the index range.1111C`Create connection over standard in/standard out.D`The bitwise or (<code>|</code>) of the bits in two flags values.00000000000ChCreate a range up to the given end (<code>..end</code>).00000BmAssorted functions shared by several assists.CkA set of utils methods to reuse on other abstraction levelsAdThe value to return.0BnIndex of watched entries in <code>load</code>.ClThe width. E.g. <code>{:5}</code> or <code>{:width$}</code>.DdMirrors <code>Variance::xform</code> - used to \xe2\x80\x98combine\xe2\x80\x99 the \xe2\x80\xa60BlSee https://github.com/matklad/cargo-xtask/.DjThe most common type of <code>Map</code>: just using <code>Any</code>; \xe2\x80\xa6DkEvaluates the operand, which must have type <code>bool</code>. If it is \xe2\x80\xa60D`Like <code>SyntaxNodePtr</code>, but remembers the type of node.BaPlace a tabstop before an elementAa<code>{:b}</code>BbThe <code>bitand</code> lang item.BmThe <code>&amp;</code> operator (bitwise and)10BbThe <code>bitxor</code> lang item.BiThe <code>^</code> operator (bitwise xor)10EcTake the address and produce either a <code>&amp;</code> or <code>*</code> pointer.0FeCauses paths to always start with either <code>self</code>, <code>super</code>, <code>crate</code>\xe2\x80\xa600Aa<code>{:^}</code>AdKind of file change.nProve a clause00Bj<code>T1</code> coerced to <code>T2</code>00Bf<code>Handle</code>\xe2\x80\x99s configuration.AiThe file was (re-)created0CkA reference to the current directory, i.e., <code>.</code>.C`Contains the results of (early) name resolution.0AdThe file was deleted0A`A custom derive.0CjThe tag directly stores the discriminant, but possibly \xe2\x80\xa6CeReplace all anonymous lifetimes by provided lifetime.BlThe file exists with the given content hash.BdHandle to a file in <code>Vfs</code>00000CiFilter for results that are visible from the given moduleAcwhen a fn is called0BcThe <code>fn_once</code> lang item.0BbThe <code>freeze</code> lang item.0BhThe <code>future_trait</code> lang item.0BiInterface for reading and watching files.CbIndicates whether this struct is <code>Box</code>.Ei<code>impl FnX(i32, i32) -&gt; i32</code>, where <code>FnX</code> is the most special \xe2\x80\xa60ClThe handle loaded the following files\xe2\x80\x99 content for the \xe2\x80\xa6Bb\xe2\x80\x9cMacros 2.0\xe2\x80\x9d macro definition.AlMethod call (has self param)AeThe file was modified0BmVisibility is restricted to a certain module.Fb<code>pub(in module)</code>, <code>pub(crate)</code> or <code>pub(super)</code>. Also private, \xe2\x80\xa61ChMerge imports from the same module into a single use \xe2\x80\xa60m&amp;mut selfBb<code>format_args(\xe2\x80\xa6, arg)</code>Df<code>Path::Normal</code> will always have either generics or type \xe2\x80\xa6E`A normal component, e.g., <code>a</code> and <code>b</code> in <code>a/b</code>.Cm<code>{1}</code> or <code>{:1$}</code> or <code>{:.1$}</code>BdThe <code>ptr.offset</code> operator0ChIdentifier produced by an opaque expansion is always \xe2\x80\xa60BbThe <code>Option</code> lang item.0CjOutput of the parser \xe2\x80\x93 a DFS traversal of a concrete \xe2\x80\xa6EhA <code>TypeRefId</code> that is guaranteed to always be <code>TypeRef::Path</code>. \xe2\x80\xa6CiImport map entry should match the query string by prefix.0ClRequires items with names that match the given string by \xe2\x80\xa6DlA Windows path prefix, e.g., <code>C:</code> or <code>\\\\server\\share</code>.AkVisibility is unrestricted.Aa<code>pub</code>.1AfUsed for public items.BeThe raw index of a value in an arena.CbRaw access to the underlying <code>HashMap</code>.AfConverts from T to *T.DfA raw pointer. Written as <code>*mut T</code> or <code>*const T</code>10BdAnnotated as <code>ref mut x</code>.BeRegion variable <code>&#39;?R</code>.0AnRename the just inserted item.CkCreates an array where each element is the value of the \xe2\x80\xa60AjReturns from the function.0DhType that will receive <code>Messages</code> from a <code>Handle</code>.BhData must be immutable and is aliasable.0CiSingle enum variants, structs/tuples, unions, and all \xe2\x80\xa6BiOnly a certain assist should be resolved.00AmOnly a single leaf at offset.CnLegacy span type, only defined here as it is still used by \xe2\x80\xa6oStatic variableCkNON STANDARD: This kind of operand returns an immutable \xe2\x80\xa60CnUsed for associated items, except Methods. (Some languages \xe2\x80\xa6BbThe <code>String</code> lang item.0AcStruct constructionAnThe server itself errored out.BnIdentifies a particular <code>ItemTree</code>.CnUsed for unsafe functions, unsafe traits, mutable statics, \xe2\x80\xa6BbThe <code>unsize</code> lang item.EnUnsize a pointer/reference value, e.g., <code>&amp;[T; n]</code> to <code>&amp;[T]</code>. \xe2\x80\xa610BcThe <code>va_list</code> lang item.0oA vacant entry.nA vacant EntryCkAny thread which does work that isn\xe2\x80\x99t in the critical \xe2\x80\xa6CmAsserts that the condition is always true and returns its \xe2\x80\xa6BcFile that this path is relative to.0BdThe anchor this span is relative to.000011CkThis file is a port of only the necessary features from \xe2\x80\xa6CiReturns the text this name represents if it isn\xe2\x80\x99t a \xe2\x80\xa60BmYields the underlying <code>str</code> slice.BoExtracts the underlying <code>str</code> slice.DcReturns a <code>&amp;str</code> slice of this <code>SmolStr</code>.CgWrap the given absolute path in <code>AbsPathBuf</code>CdWrap the given absolute path in <code>AbsPath</code>DkRecoverable assertions, inspired by the use of <code>assert()</code> in \xe2\x80\xa621CmReturns information about the call argument this token is \xe2\x80\xa6DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.00000000000DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa600000000000CjReturns an iterator over all block expressions in this \xe2\x80\xa6BkBounds for the associated type, like in \xe2\x80\xa6BdStateful iteration over token trees.CmDefines a unit of change that can applied to the database \xe2\x80\xa6nKind of changeAmConfiguration for term searchBcConfig used by the language server.CjSimple logger that logs either to stderr or to a file, \xe2\x80\xa6CcReturns an iterator over the crates in the project.FdThe <code>DefId</code> of the <code>TraitItem</code> or <code>ImplItem</code> for the associated \xe2\x80\xa60000BfRefers to offsets in the original textBlRemove specified <code>range</code> of text.1BiAdditional info to show in the UI pop up.0DcReturns <code>true</code> if the path points at an existing entity.CeProvides a panic-less way to verify file_id validity.DcReturns <code>true</code> if the change is not <code>Delete</code>.BkChecks if the proc-macro server has exited.EbExpands the <code>UseTree</code> into individually imported <code>ModPath</code>s.CkRun the expander with the given input subtree, optional \xe2\x80\xa6ChExpands the procedural macro by sending an expansion \xe2\x80\xa6CnExtends this crate graph by adding a complete second crate \xe2\x80\xa6D`The bitwise or (<code>|</code>) of the bits in each flags value.000000000100CdSays where the fields are located within the layout.DiFinalizes the <code>SpanMap</code>, shrinking its backing storage and \xe2\x80\xa6CeBuilds a <code>SmolStr</code> from <code>self</code>.BnA global set of overrides matching all crates.CmThe type system. We currently use this to infer types for \xe2\x80\xa6CkThis crate defines the core data structure representing \xe2\x80\xa6ChInsert the <code>file_id, path</code> pair into the set.D`The bitwise or (<code>|</code>) of the bits in two flags values.00000000000DcAppend specified <code>text</code> at the given <code>offset</code>DjSets the value of the entry with the <code>VacantEntry</code>\xe2\x80\x99s key, \xe2\x80\xa6DgSets the value of the entry with the <code>OccupiedEntry</code>\xe2\x80\x99s \xe2\x80\xa6ClInserts a value associated with a given arena index into \xe2\x80\xa625CnGlobal <code>Arc</code>-based object interning infrastructure.CcWhether all known bits in this flags value are set.00000000000DkReturns <code>true</code> if the path exists on disk and is pointing at \xe2\x80\xa6D`Returns <code>true</code> if the mutability is <code>Mut</code>.BkReturn <code>true</code> if self is mutable10D`Return <code>true</code> if self is <strong>not</strong> mutable0BkCompute the binary representation of a typeCnListen for a connection over tcp. This call blocks until a \xe2\x80\xa6CjDynamically compatible interface for file watching and \xe2\x80\xa6BbWhat string is used for filtering.CiLookup is used to check if completion item indeed can \xe2\x80\xa610AnProc macros for rust-analyzer.BhCreates a pair of connected connections.FbReturns the module containing <code>self</code> (or <code>self</code>, if <code>self</code> is \xe2\x80\xa6CjReturns the enclosing module this thing is defined within.1AfThe containing module.BnReturns the module this definition resides in.BmThe files that have been loaded successfully.DaTransforms the <code>LineCol</code> into a <code>TextSize</code>.0BnThis context, but with all transparent and \xe2\x80\xa6EfReturns a <code>Pat</code> if the path has just one segment, an <code>OrPat</code> \xe2\x80\xa6BaWhere does this module come from?CkThe patterns for the function\xe2\x80\x99s parameters. While the \xe2\x80\xa6DjReturns the <code>VfsPath</code> without its final component, if there \xe2\x80\xa6AfFinds a parent module.DfIf this <code>DefMap</code> is for a block expression, returns the \xe2\x80\xa60BnParent module in the same <code>DefMap</code>.DjReturns the <code>Path</code> without its final component, if there is \xe2\x80\xa6DeEquivalent of <code>Utf8Path::parent</code> for <code>AbsPath</code>.CnReturns the parent ast::Module, this is different than the \xe2\x80\xa616A`The Rust parser.CiIn rust, it is possible to have a value, a type and a \xe2\x80\xa6AiA pretty-printer for HIR.CcReadme file as given in the <code>Cargo.toml</code>DkThis module contains the definitions of most <code>TypeRelation</code>s \xe2\x80\xa6CdGeneric relation routine suitable for most anything.0001CeThe intersection of a source flags value with the \xe2\x80\xa600000000000ClTakes the value of the entry out of the map, and returns \xe2\x80\xa6CmRemoves an index from the map, returning the value at the \xe2\x80\xa6ChReturns the edit required to rename reference at the \xe2\x80\xa6ClRenames the item at the cursor position after the assist \xe2\x80\xa6CgRename infrastructure for rust-analyzer. It is used \xe2\x80\xa6AcWhere to resume to.0BlImplementation of find-usages functionality.CbFetches the definition\xe2\x80\x99s source node. Using [\xe2\x80\xa6CkSearch for a definition\xe2\x80\x99s source and cache its syntax \xe2\x80\xa6CcDebug info about the current state of the analysis.CfSyntax Tree library used throughout the rust-analyzer.AmInformation about the target.CjWhere to go after this call returns. If none, the call \xe2\x80\xa60CkTarget ranges are used to sort assists: the smaller the \xe2\x80\xa600lrustc targetBmThe target data layout queried for workspace.CbA utility module for working with threads that \xe2\x80\xa6DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa600000000000CiPopulated when the completion item comes from a trait \xe2\x80\xa60BfTrait solving using next trait solver.CkFunctionality for obtaining data related to traits from \xe2\x80\xa6CjThe imaginary cleanup block link. This particular path \xe2\x80\xa60BoReturns an iterator over the values in the map.BnReturns an iterator over the arena\xe2\x80\x99s values.CaWrapper around an absolute <code>Utf8Path</code>.0DiThe main trait to go from untyped <code>SyntaxNode</code>  to a typed \xe2\x80\xa6BdThe <code>async_fn</code> lang item.0BeOffset is exactly between two leaves.An|, &amp;, !, ^, |=, &amp;=, ^=BdThe <code>box_free</code> lang item.0b[]BgReturns a possible builder for the typeCeStuff like <code>line!</code> and <code>file!</code>.DcCauses paths to start with <code>crate</code> where applicable, \xe2\x80\xa600ChA simple configuration value passed in from the outside.0CaThe handle loaded the following files\xe2\x80\x99 content.CjThe anonymous type of a closure. Used to represent the \xe2\x80\xa60BcThe <code>Context</code> lang item.0BeA wrapper around google_cpu_profiler.ClMerges all descendant use tree lists with only one child \xe2\x80\xa6AdThe file is deleted.o<code>{}</code>DaA <code>#[cfg]</code> directive in Disjunctive Normal Form (DNF).AhCast into a dyn* object.0AnA trait object. Written as \xe2\x80\xa60CjUtility trait to allow calling syntax editor functions \xe2\x80\xa6DbUtility trait to allow calling <code>ted</code> functions with \xe2\x80\xa6BhSearch for the name in other items only.00DbA set of <code>VfsPath</code>s identified by <code>FileId</code>s.0CjAn unsized FFI type that is opaque to Rust. Written as \xe2\x80\xa60CgSearch for the name in both associated and other items.00Ee<code>InferOk&lt;&#39;db, ()&gt;</code> is used a lot. It may seem like a useless \xe2\x80\xa60CnA trait for the conversion of an object into a boxed trait \xe2\x80\xa6DeGiven a region <code>R</code>, true if it is <code>&#39;empty</code>.0BeCrates that are non member libraries.BaUsed for items from other crates.Df<code>(line, column)</code> information in the native, UTF-8 encoding.0Bg<code>{:5}</code> or <code>{:.5}</code>Bi<code>#[attr = &quot;string&quot;]</code>n&amp;&amp;, ||gA macroCgMessage about an action taken by a <code>Handle</code>.CgThis is produced if the syntax tree does not have a \xe2\x80\xa6BaUniquely identifies a definition.ClInformation which uniquely identifies a definition which \xe2\x80\xa6DeAnnotated with <code>mut x</code> \xe2\x80\x93 could be either ref or not, \xe2\x80\xa6A`Mutable binding.CkAn operand in MIR represents a \xe2\x80\x9cvalue\xe2\x80\x9d in Rust, the \xe2\x80\xa60Aa<code>{:p}</code>Ag<code>pub(self)</code>.BcThe <code>RangeTo</code> lang item.0CmA higher-ranked region. These represent either late-bound \xe2\x80\xa60CfA region that resulted from some other error. Used \xe2\x80\xa60C`Wrapper around a relative <code>Utf8Path</code>.CcRepresents requests sent from the client to the \xe2\x80\xa6CnThe root directory component, appears after any prefix and \xe2\x80\xa6BjGeneric arguments directly on the segment.CiThe immediately borrowed place must be immutable, but \xe2\x80\xa60DbA <code>SmolStr</code> is a string type that has the following \xe2\x80\xa6AhA user supplied snippet.0CiIndicates whether a token can join with the following \xe2\x80\xa6000BgSpanmap for a macro file or a real fileCkMaps absolute text ranges for the corresponding file to \xe2\x80\xa6Ah<code>T1 &lt;: T2</code>00BiA tabstop snippet (e.g. <code>$0</code>).AbRun a single test.CkEnum types that implement <code>std::ops::Try</code> trait.BnEquivalent to <code>Infer(FloatVar(_))</code>.0nCompare ty::Ty0CfExactly like <code>BinaryOp</code>, but less operands.0ClCase of an unknown value that rustc might know but we don\xe2\x80\xa6AiEnum variant constructionDa<strong>SemVer version</strong> as defined by https://semver.org.AiPath in <code>Vfs</code>.0FcReturns the <code>AbsPath</code> representation of <code>self</code> if <code>self</code> is on \xe2\x80\xa6BiCoerces to an <code>AbsPath</code> slice.BhCoerces to a <code>RelPath</code> slice.BiCoerces to a <code>Utf8Path</code> slice.CmExtracts a slice corresponding to the portion of the path \xe2\x80\xa634ChReturn all the assists applicable at the given position.DjThis module defines the <code>Assist</code> data structure. The actual \xe2\x80\xa6BjDefines input for code generation process.BoAuthors as given in the <code>Cargo.toml</code>Cmbase_db defines basic database traits. The concrete DB is \xe2\x80\xa6Eg<code>base_db</code> is normally also needed in places where <code>ide_db</code> is \xe2\x80\xa6CaReturns a builder for <code>FileSetConfig</code>.AmBuiltin macros and attributesBhCleanups to be done if the call unwinds.0CcThe command to execute after the assist is applied.00ChOpen a connection over tcp. This call blocks until a \xe2\x80\xa6BiCreates a default <code>fx</code> hasher.Bm<code>Definition</code> defined by this name.DgReturns a <code>Display</code>able type that is human-readable. Use \xe2\x80\xa60DiThe <code>HirDisplay</code> trait, which serves two purposes: Turning \xe2\x80\xa6DaThis module defines a <code>DynMap</code> \xe2\x80\x93 a container for \xe2\x80\xa6CaThe edition of the Rust language used in a crate.AmRust edition for this packageCjSpecifies the edition of this crate. This must be used \xe2\x80\xa6BgWhether native diagnostics are enabled.0AfDirectories to excludeCaReturns the file containing the macro invocation.DhId of the given path if it exists in the <code>Vfs</code> and is not \xe2\x80\xa6AfId of the changed fileDfReturns <code>Some(..)</code> if the provided type is an enum that \xe2\x80\xa6AmFulfill loop for next-solver.0CcGets a mutable reference to the value in the entry.ClReturns a mutable reference to the value associated with \xe2\x80\xa6CiThis module generates AST datatype used by rust-analyzer.CgRandom assortment of ide helpers for high-level ide \xe2\x80\xa6Dj<code>hir_def</code> crate contains everything between macro expansion \xe2\x80\xa6DhNote that this may not be the direct <code>SyntaxContextId</code> of \xe2\x80\xa6AnMachinery for hygienic macros.AiStructural Search ReplaceAfDirectories to includeChInstalls rust-analyzer language server and/or editor \xe2\x80\xa6DkReturns <code>true</code> if the path exists on disk and is pointing at \xe2\x80\xa6DhReturns <code>true</code> if the project workspace is <code>Json</code>.Feis this a <code>fn main</code> or a function with an <code>export_name</code> of <code>main</code>\xe2\x80\xa6CfHelper function to check if outermost type tree is \xe2\x80\xa6CgDoes this function have <code>#[test]</code> attribute?AkIterator of lifetimes fieldEkCreates an owned <code>PathBuf</code> with <code>path</code> adjoined to <code>self</code>.CgExplicitly declares this crate as a library outside \xe2\x80\xa6BoLicense as given in the <code>Cargo.toml</code>DiEvaluate whether the given <code>Version</code> satisfies the version \xe2\x80\xa6BdReturns matches for all added rules.DiReturns the number of code units it takes to encode <code>text</code> \xe2\x80\xa6CbA fake name for things missing in the source code.0CbThe modules and their data declared in this crate.0BfReturns moniker of symbol at position.AmThe total files to be loaded.ClThis module implements import-resolution/macro expansion \xe2\x80\xa6CfCreates an instance that\xe2\x80\x99s weakly coupled to its \xe2\x80\xa60BiLoad the project without any dependenciesBaPackage that provided this targetCgRead both stdout and stderr of child without deadlocks.CbA collection of tools for profiling rust-analyzer.BdThe program invoked by the runnable.FcReturns <code>&quot;const&quot;</code> or <code>&quot;mut&quot;</code> depending on the mutability.0DbReplaces specified <code>range</code> of text with a given string.CnReserves capacity for at least additional more elements to \xe2\x80\xa6E`Invokes <code>reserve</code> on the underlying instance of <code>PathBuf</code>.CiThings for resolving vars in the infer context of the \xe2\x80\xa60AbDependencies graphBlAll definitions for this local. Example: \xe2\x80\xa6BgReturns the span at the given position.AlWhether to highlight stringsAgFile symbol extraction.AhSysroot loading behaviorBfThe sysroot loaded for this workspace.CnTargets provided by the crate (lib, bin, example, test, \xe2\x80\xa6\xe2\x80\xa6mrustc targetsEdTransforms the <code>WideLineCol</code> with the given <code>WideEncoding</code> \xe2\x80\xa60EgTransforms the <code>LineCol</code> with the given <code>WideEncoding</code> into a \xe2\x80\xa60CjThe tooltip to show when hovering over the inlay hint, \xe2\x80\xa6CbGets the <code>TypeId</code> of <code>self</code>.ClA \xe2\x80\x9cverify\xe2\x80\x9d is something that we need to verify after \xe2\x80\xa60BcThe versions of the server protocolBlVersion given in the <code>Cargo.toml</code>BhGet the version string of the toolchain.BlReturns information about cargo\xe2\x80\x99s version.CkCode for representing rust-analyzer\xe2\x80\x99s release version \xe2\x80\xa61Cgrust-analyzer\xe2\x80\x99s version, such as \xe2\x80\x9c1.57.0\xe2\x80\x9d, \xe2\x80\x9c\xe2\x80\xa6CmVersion number to associate progress updates to the right \xe2\x80\xa6BiPreorder walk all the type\xe2\x80\x99s sub types.CmAnalysis includes type inference, checking that items are \xe2\x80\xa60CjAnalysis is a snapshot of a world state at a moment in \xe2\x80\xa6CnGiven a set of bounds <code>B</code>, expands to the function:0CfA map from arena indexes to some other type. Space \xe2\x80\xa6Dd<code>{:.*}</code>, <code>{:.5$}</code>, or <code>{:a$}</code>, etc.CkUnique identifier of the assist, should not be shown to \xe2\x80\xa600EaMaps items\xe2\x80\x99 <code>SyntaxNode</code>s to <code>ErasedFileAstId</code>s and back.DgLike <code>AstNode</code>, but wraps tokens rather than interior nodes.Dh<code>BarePath</code> is used when the path has neither generics nor \xe2\x80\xa6Ef<code>Offset</code> has the same semantics as <code>pointer::offset</code>, except \xe2\x80\xa6Fe<code>op</code> cannot be bare <code>=</code> (but can be <code>op=</code>), these are lowered to \xe2\x80\xa61CdThe behavior during MIR borrowck is identical to \xe2\x80\xa60AgCallable item or value.Cc<code>format_args(&quot;\xe2\x80\xa6 {arg} \xe2\x80\xa6&quot;)</code>Ch<code>#[rust_analyzer::completions(...)]</code> options.0CiConstants are already semantically values, and remain \xe2\x80\xa60CkInstantiating a type variable with the given type would \xe2\x80\xa60BeThe <code>deref_mut</code> lang item.0BdThe <code>destruct</code> lang item.0CfDevice namespace prefix, e.g., <code>\\\\.\\COM42</code>.CfTry to automatically detect where the rustc source \xe2\x80\xa6DcMethods for downcasting from an <code>Any</code>-like trait object.ClThe file was specifically excluded by the user. We still \xe2\x80\xa6CnIn Rust, macros expand token trees to token trees. When we \xe2\x80\xa6Ck<code>FmtError</code> is required to be compatible with \xe2\x80\xa60BhFunction call (does not take self param)CmA speedy hash algorithm for use within rustc. The hashmap \xe2\x80\xa6CbTrait for obtaining the defining crate of an item.BjA range of densely allocated arena values.Be<code>{}</code> or <code>{:.*}</code>BeThe <code>index_mut</code> lang item.0CkHighlighting injection like rust code in doc strings or \xe2\x80\xa6BhAn iterator over the arena\xe2\x80\x99s elements.AoThe item tree of a source file.BdThe <code>iterator</code> lang item.0DjA <code>std::process::Child</code> wrapper that will kill the child on \xe2\x80\xa6Cfeg. <code>#[cfg(target_os = &quot;linux&quot;)]</code>0Boeg. <code>#[doc(alias = &quot;it&quot;)]</code>CiA representation of all the valid language items in Rust.CmA link to a lang item. It is used in desugaring of things \xe2\x80\xa61d\xe2\x80\x99aAa<code>{:e}</code>Aa<code>{:x}</code>CdEdge case \xe2\x80\x93 macros generally don\xe2\x80\x99t expand to \xe2\x80\xa60BiThe <code>metadata_type</code> lang item.0DcStarting point for metadata returned by <code>cargo metadata</code>CmEnum-likes with more than one variant: each variant comes \xe2\x80\xa6Aj<code>naked_asm!()</code>.a!C`Set in cases when item is postfix, but not exactAbAn occupied entry.AaAn occupied EntryBdThe <code>Ordering</code> lang item.0BeThe <code>owned_box</code> lang item.0BeThe <code>panic_fmt</code> lang item.0eTraitBlPosition describing where to insert elementsAlIndicate a gradual progress.CdAll sorts of pointer-to-pointer casts. Note that \xe2\x80\xa60BfVisibility is restricted to the crate.Ah<code>pub(crate)</code>.1DdSyntactical attributes, without filtering of <code>cfg_attr</code>s.CmErased region, used by trait selection, in MIR and during \xe2\x80\xa60CkStatic data that has an \xe2\x80\x9cinfinite\xe2\x80\x9d lifetime. Top in \xe2\x80\xa60BdThe <code>receiver</code> lang item.0BoA parsing function for a specific braced-block.CjManages the set of pending requests, both incoming and \xe2\x80\xa6ClRepresents responses sent from the proc-macro-srv to the \xe2\x80\xa6AnThe <code>Ok</code> lang item.0BdThe <code>ResumeTy</code> lang item.0CcA template-like structure for describing runnables.lFor IDE onlyBhThe <code>slice_len_fn</code> lang item.0CkSpans represent a region of code, used by the IDE to be \xe2\x80\xa6BmDefines the mode used for handling span data.CjA measure of text length. Also, equivalently, an index \xe2\x80\xa600000EhThis is a <code>some::path::self</code> import, which imports <code>some::path</code>\xe2\x80\xa6Aa<code>{:E}</code>Aa<code>{:X}</code>CcA slice of a UTF-8 path (akin to <code>str</code>).BjA marker trait for phantom variance types.CaVerbatim prefix, e.g., <code>\\\\?\\cat_pics</code>.CmCreates a real file span map that returns absolute ranges \xe2\x80\xa60ChAdds a new associated item after all of the existing \xe2\x80\xa6CkAdds a rule to be applied. The order in which rules are \xe2\x80\xa6CmThe adjusted type, or the original in case no adjustments \xe2\x80\xa6BmThe adjusted type, if an adjustment happened.CjReturns a snapshot of the current state, which you can \xe2\x80\xa6BnIndex into <code>FormatArgs::arguments</code>.DjIf this path is a single identifier, like <code>foo</code>, return its \xe2\x80\xa60CmReturns information about the call argument this token is \xe2\x80\xa6DgAssociated type bindings like in <code>Iterator&lt;Item = T&gt;</code>.EaInvokes <code>capacity</code> on the underlying instance of <code>PathBuf</code>.B`Iterates over all child modules.CiThis field stores the closures directly owned by this \xe2\x80\xa60AmWhether to highlight commentsCe<code>#[rust_analyzer::completions(...)]</code> mode.DhThe value of <code>#[rust_analyzer::completions(...)]</code>, if exists.0CmWhether all set bits in a source flags value are also set \xe2\x80\xa6000000000BgCheck if this range contains an offset.1100000BgThe macro definition site, if relevant.C`Defines the <code>def_site</code> span location.CnA dummy expander that always errors. This expander is used \xe2\x80\xa6CfWhether this proc-macro is disabled for early name \xe2\x80\xa6CkAttempts to discover the toolchain\xe2\x80\x99s sysroot from the \xe2\x80\xa6BhThe expander handle for this proc macro.AmList of features to activate.CjFeatures provided by the crate, mapped to the features \xe2\x80\xa611CaPartitions a list of files into disjoint subsets.DjCreates an <code>GenericArgs</code> for generic parameter definitions, \xe2\x80\xa60CkIf the node is a braced block, return the corresponding \xe2\x80\xa6AnSuggest a name for given type.BoCreates a new index from a <code>RawIdx</code>.BlConstructs a <code>RawIdx</code> from a u32.fSafetyCjThis is set for items that are function (associated or \xe2\x80\xa60CgThis clones rustc repo, and so is not worth to keep \xe2\x80\xa6CdThings related to generics in the next-trait-solver.AiPre-type IR item genericsBdUtilities for working with generics.2CcWhether this function declaration has a definition.DbReturns <code>true</code> if the <code>Utf8Path</code> has a root.C`Homepage as given in the <code>Cargo.toml</code>CeLimit the search to a given <code>SearchScope</code>.ChThings related to the Interner in the next-trait-solver.0BmConvert self into the appropriate boxed form.CiConverts the entry into a mutable reference to its value.DkConverts the <code>OccupiedEntry</code> into a mutable reference to the \xe2\x80\xa6ClConverts this index into the underlying <code>RawIdx</code>.CkDeconstructs a <code>RawIdx</code> into the underlying u32.CkWhether this symbol is a doc alias for the original symbol.ChDoes this function have <code>#[bench]</code> attribute?DhReturns <code>true</code> if this region constraint data contains no \xe2\x80\xa6BoWhether all bits in this flags value are unset.0000000001AmCheck if this range is empty.110BiReturns whether the index range is empty.BoReturns whether the arena contains no elements.22DjReturns <code>true</code> if <code>self</code> has a length of zero bytes.33CnEquivalent to <code>peek().is_none()</code>, but a bit faster.DaReturns <code>true</code> if the attr_kind is <code>Inner</code>.AhSet for local variables.0ClDoes this package come from the local filesystem (and is \xe2\x80\xa6BnIs from the local filesystem and may be editedDaReturns <code>true</code> if the attr_kind is <code>Outer</code>.ClReturns an iterator over the arena indexes and values in \xe2\x80\xa6ChReturns an iterator over the arena\xe2\x80\x99s mutable elements.AnYet another index-based arena.BdReturns the lifetime of the DataTypeDaTransforms the <code>TextSize</code> into a <code>LineCol</code>.0CiThe module\xe2\x80\x99s ID in its originating <code>DefMap</code>.BkPath containing the <code>Cargo.toml</code>CkReturns the path to the project\xe2\x80\x99s manifest, if it exists.ClQueries the file system to get information about a file, \xe2\x80\xa6C`The contents of [package.metadata.rust-analyzer]DhA lowering for <code>use</code>-paths (more generally, paths without \xe2\x80\xa6BlReturns the number of crates in the project.DgThis points to the <code>syntax::ast::Name</code> identifier of the \xe2\x80\xa6BaRoot of the modified syntax tree.CbVarious helper functions to work with SyntaxNodes.BkRoot of the initial unmodified syntax tree.CnReturns an edit which should be applied when opening a new \xe2\x80\xa6AmWhether to highlight operatorClRelative order of the two ranges (overlapping ranges are \xe2\x80\xa600000BoThe original type of the expression or pattern.CjA list of all crates referenced by this crate (and the \xe2\x80\xa6DgReturns a <code>IdentPat</code> if the path has just one segment, a \xe2\x80\xa6CmIf polarity is Positive: we are proving that the trait is \xe2\x80\xa600DiFile position where SSR was invoked. Paths in <code>query</code> will \xe2\x80\xa6DfAppends a given string slice onto the end of <code>self</code>\xe2\x80\x99s \xe2\x80\xa6ChReturns an iterator over the entries within a directory.AhName resolution fa\xc3\xa7ade.CfBuilds a resolver for type references inside this def.BaGet this function\xe2\x80\x99s return typeBeRustdoc specific doc comment handlingCjGate <code>#[test]</code> behind <code>#[cfg(test)]</code>BkSet <code>cfg(test)</code> for local cratesBnSpan maps for real files and macro expansions.CgReturns the length of the text covered by this element.0DgReturns the roots for the current <code>ProjectWorkspace</code> The \xe2\x80\xa6DjThe type bound to this associated type (in <code>Item = T</code>, this \xe2\x80\xa6CkHIR for references to types. Paths in these are not yet \xe2\x80\xa6CeThis is a copy of <code>std::marker::variance</code>.DkConstruct a variance marker; equivalent to <code>Default::default</code>\xe2\x80\xa6CnEncodes information about multi-variant layouts. Even with \xe2\x80\xa6BoPreorder walk all the pattern\xe2\x80\x99s sub patterns.DhThe <code>0</code> flag. E.g. the <code>0</code> in <code>{:02x}</code>.BfThe <code>add_assign</code> lang item.0CjCreates a pointer with the indicated mutability to the \xe2\x80\xa60CcCreates an aggregate value, like a tuple or struct.0CnGiven a set of bounds <code>B</code>, expands to the function:0CiA marker predicate that is always ambiguous. Used for \xe2\x80\xa600DgInvariant: <code>inner.as_assoc_item(db).is_some()</code> We do not \xe2\x80\xa6CaGeneric arguments on an associated type, e.g. \xe2\x80\xa6CnUsed to differentiate individual elements within attribute \xe2\x80\xa6AhE.g., <code>Send</code>.00ClPseudo-module introduced by a block scope (contains only \xe2\x80\xa6CmWhen checking whether impls overlap, we check whether any \xe2\x80\xa60BoValue that is being consumed in a function callBeThe <code>coroutine</code> lang item.ClThe anonymous type of a coroutine. Used to represent the \xe2\x80\xa610BnUsed for crate names, like <code>serde</code>.E`The mapping from <code>UniqueCrateData</code> to their <code>Crate</code> input.BfThe <code>div_assign</code> lang item.0o<code>..</code>0CmA block where control flow only ever takes one real path, \xe2\x80\xa60BkA single field of an enum variant or structCl<code>AstId</code> points to an AST node in a specific file.BgThe <code>fn_ptr_addr</code> lang item.0CfType alias for a hash map that uses the Fx hashing \xe2\x80\xa60CfType alias for a hash set that uses the Fx hashing \xe2\x80\xa6Ak<code>global_asm!()</code>.CkInternal node in the immutable tree. It has other nodes \xe2\x80\xa6ClInput to the analyzer is a set of files, where each file \xe2\x80\xa6DjA wrapper around [<code>span::SyntaxContextId</code>] that is intended \xe2\x80\xa6BoA map from publicly exported items to its name.0A`<code>..=</code>0CnWe switched our variance because a generic argument occurs \xe2\x80\xa6000BbFailed to deserialize the message.DoMaps flat <code>TextSize</code> offsets to/from <code>(line, column)</code> \xe2\x80\xa60Ah! (only for macro calls)CmA constant can have reference to other things. Memory map \xe2\x80\xa6BfThe <code>meta_sized</code> lang item.0BlThe defs which can be visible in the module.BfThe <code>mul_assign</code> lang item.0DfOn a first blush, a single <code>ast::Name</code> defines a single \xe2\x80\xa6BoComputes a value as described by the operation.0BfThe <code>panic_impl</code> lang item.0BfThe <code>panic_info</code> lang item.0CkA reference to the parent directory, i.e., <code>..</code>.AnThe <code>eq</code> lang item.0BaThe <code>Ready</code> lang item.0BaA function-like procedural macro.0ChThe thing we love the most here in rust-analyzer \xe2\x80\x93 \xe2\x80\xa6AdA loaded proc-macro.CdUsed to differentiate individual elements within \xe2\x80\xa6DcA handle to a specific proc-macro (a <code>#[proc_macro]</code> \xe2\x80\xa6BgDesugars doc comments as quoted stringsBeThe <code>RangeFrom</code> lang item.0BeThe <code>RangeFull</code> lang item.0BbInfo associated with a text range.DjTrait to describe operations common to both <code>RangeExpr</code> and \xe2\x80\xa6CcPassing type as reference (with <code>&amp;</code>)AdImmutable reference.ClA constraint where neither side is a variable. This does \xe2\x80\xa60CdA concrete region is a subregion of region variable.0BfThe <code>rem_assign</code> lang item.0AoThe <code>Err</code> lang item.0CmPrimary API to get semantic information, like types, from \xe2\x80\xa60BoSets server-specific configurations. Since [\xe2\x80\xa6CnConfirms the application of a configuration update. Since [\xe2\x80\xa6BfThe <code>shl_assign</code> lang item.0BfThe <code>shr_assign</code> lang item.0ClDiagnostics that come from types in fn parameters/return \xe2\x80\xa6BfThe <code>sub_assign</code> lang item.0BeSwitches based on the computed value.0D`A range in text, represented as a pair of <code>TextSize</code>.00000EfConvert value to <code>SmolStr</code> using <code>fmt::Display</code>, potentially \xe2\x80\xa6Am<code>#[attr(subtree)]</code>ChThis should never happen. Type mismatch should catch \xe2\x80\xa600A`A type parameterCkThe trace designates the path through inference that we \xe2\x80\xa60CjA region variable is a subregion of a concrete region. \xe2\x80\xa60BlA region variable is a subregion of another.0Cf<code>WalkEvent</code> describes tree walking process.ChAdds a new associated item after all of the existing \xe2\x80\xa6EfThe alignment. E.g. <code>{:&gt;}</code> or <code>{:&lt;}</code> or <code>{:^}</code>.AhThe <code>#</code> flag.DbProduces an iterator over <code>Utf8Path</code> and its ancestors.EgMatches a <code>PredicateKind::Clause</code> and turns it into a <code>Clause</code>\xe2\x80\xa60BoYields the underlying <code>OsStr</code> slice.CaExtracts the underlying <code>OsStr</code> slice.AeThe id of the assist.00CkReturns types that this type dereferences to (including \xe2\x80\xa6ClIn certain situations, rust automatically inserts derefs \xe2\x80\xa6DiReturns types that <code>ty</code> transitively dereferences to. This \xe2\x80\xa6CfThe <code>ExprId</code> of the actual body expression.CfReturns the type this def\xe2\x80\x99s body has to evaluate to.CkThe build system specific file that describes this project,AdThe macro call site.CaDefines the <code>call_site</code> span location.Do<strong>Canonicalization</strong> is the key to constructing a query in the \xe2\x80\xa60AkConstant evaluation detailsB`The module containing this item.0GgThe <code>x</code> or <code>X</code> flag (for <code>Debug</code> only). E.g. the <code>x</code> in <code>{:x?}</code>.ClA textual representation of the HIR of this def\xe2\x80\x99s body \xe2\x80\xa6ClA textual representation of the MIR of this def\xe2\x80\x99s body \xe2\x80\xa6DgDetermines whether <code>child</code> is a suffix of <code>self</code>.DcExtracts the extension of <code>self.file_name</code>, if possible.CeExtra env vars to set when invoking the cargo command0DiReturns the final component of the <code>Utf8Path</code>, if there is \xe2\x80\xa6CjFile path corresponding to the given <code>file_id</code>.DkExtracts the stem (non-extension) portion of <code>self.file_name</code>\xe2\x80\xa6AaText of the file.BaGets the text of the source file.EdLike <code>for_item()</code>, but calls first uses the args from <code>first</code>.0ClFinds a path that can be used to refer to the given item \xe2\x80\xa6ClFind a path that can be used to refer to a certain item. \xe2\x80\xa6CgAn algorithm to find a path to refer to a certain item.DkReturns <code>self</code> with any nested matches removed and made into \xe2\x80\xa6BeQueries all impls of the given trait.CbAppends formatted string to a <code>String</code>.AjConvert from a bits value.00000000000D`The bitwise or (<code>|</code>) of the bits in each flags value.00000000000EcCreates a <code>ModPath</code> from a <code>PathKind</code>, with no extra path \xe2\x80\xa60BgOpposite of <code>LangItem::name</code>ClGet a flags value with the bits of a flag with the given \xe2\x80\xa6000000001000ChConverts a <code>Path</code> to a <code>Utf8Path</code>.DiThe hidden type in which <code>member_region</code> appears: used for \xe2\x80\xa60BoComputes syntax highlighting for the given fileEdGenerates <code>From</code> impls for <code>Enum E { Foo(Foo), Bar(Bar) }</code> \xe2\x80\xa6CjThe range covered by both ranges, if it exists. If the \xe2\x80\xa600000BmDoes this function have the ignore attribute?CaWhether this package is a member of the workspaceDeReturns <code>true</code> if the transparency is <code>Opaque</code>.0DcReturns <code>true</code> if the mutability is <code>Shared</code>.0BjA simplified AST that only contains items.ChSalsa query. Look for a lang item, starting from the \xe2\x80\xa6EaCollects lang items: items marked with <code>#[lang = &quot;...&quot;]</code> \xe2\x80\xa6DiLoad the content of the given file, returning <code>None</code> if it \xe2\x80\xa6DbIf <code>scope</code> refers to a macro def scope, returns the \xe2\x80\xa6DcMatches a <code>SyntaxNode</code> against an <code>ast</code> type.CgThis expression is the whole method chain up to and \xe2\x80\xa6AiNormalize the given path:0ClEnsures a value is in the entry by inserting the default \xe2\x80\xa6CnReturns the fallback target that is jumped to when none of \xe2\x80\xa60CfReturn an index of a parameter in the generic type \xe2\x80\xa6CfPartition <code>vfs</code> into <code>FileSet</code>s.DfThe precision. E.g. <code>{:.5}</code> or <code>{:.precision$}</code>.AmThings related to predicates.0CcA few helper functions for dealing with primitives.AoOptional qualifier before name.BkReads a JSON message from the input stream.CkReads a symbolic link, returning the file that the link \xe2\x80\xa6CkIndicates that a reference or mutable reference to this \xe2\x80\xa60CkWe use this to sort completion. Relevance records facts \xe2\x80\xa60CnReturns the set of possible targets to run for the current \xe2\x80\xa6CkHolds cfg flags for the current target. We get those by \xe2\x80\xa6CjGet the built-in cfg flags for the to be compile platform.BlA set of overrides matching specific crates.CgDetermines whether to serialize the expansion settings.CeLimit the search to a given <code>SearchScope</code>.EbInvokes <code>shrink_to</code> on the underlying instance of <code>PathBuf</code>.DdMaps the lowered <code>Attr</code> back to its original syntax node.0BhDefines how span data should be handled.DiBuilds a switch targets definition that jumps to <code>then</code> if \xe2\x80\xa60BiWhat happens when user selects this item.ChText edit to apply when \xe2\x80\x9caccepting\xe2\x80\x9d this inlay hint.1BjRepresentation of a <code>TextEdit</code>.CiConverts this parse result into a parse result for an \xe2\x80\xa6BlToolchain version used to compile the crate.BmThe toolchain version used by this workspace.DeDiscovery of <code>cargo</code> &amp; <code>rustc</code> executables.BaBasic tree diffing functionality.CiCreates a tuple of patterns from an iterator of patterns.CnThis module contains structures for filtering the expected \xe2\x80\xa6CgPreorder walk all the expression\xe2\x80\x99s child expressions.CaSets jointness for the last token we\xe2\x80\x99ve pushed.CcCreates a <code>fx</code> hasher with a given seed.DhAdds <code>1</code> to the value and wraps around if the maximum for \xe2\x80\xa60DcThis allows using the <code>write!</code> macro directly with a \xe2\x80\xa6CmA <code>Utf8PathBuf</code> that is guaranteed to be absolute.0CiRepresents coercing a value to a different type of value.Aj+, -, *, /, +=, -=, *=, /=AjUsed for associated items.BhThe <code>async_fn_mut</code> lang item.0DeThe <code>begin_panic</code> lang item. libstd panic entry point. \xe2\x80\xa60AkDifferent signed int types.0CmConfiguration options used for conditional compilation on \xe2\x80\xa60AdKind of file change.CnAnonymous region for the implicit env pointer parameter to \xe2\x80\xa60ClInformation about the git repository where rust-analyzer \xe2\x80\xa6Al, &lt;, ==, &gt;=, &lt;=, !=CfConnection is just a pair of channels of LSP messages.AaA const parameterAjConstant generic parameterCiRepresents a constraint that influences the inference \xe2\x80\xa60B`This is set in cases like these:Ga<code>foo</code> in <code>fn foo(x: i32)</code> is a definition, <code>foo</code> in <code>foo(90 + 2)</code> \xe2\x80\xa6DhSubset of <code>ide_db::Definition</code> that doc links can resolve to.CkHelps with finding well-know things inside the standard \xe2\x80\xa6CdWell known type (such as <code>true</code> for bool)DcEncapsulate a bunch of raw <code>.set</code> calls on the database.0CmThe actual data that is stored in the index. It should be \xe2\x80\xa6BhThe <code>fn_ptr_trait</code> lang item.0B`The <code>poll</code> lang item.0Eg<code>base_db</code> is normally also needed in places where <code>ide_db</code> is \xe2\x80\xa60AjA single generic argument.BgThe <code>get_context</code> lang item.0ClEnforces the constness of the predicate we\xe2\x80\x99re calling. \xe2\x80\xa600CiItem import details stored in the <code>ImportMap</code>.0ClRetrieves a list of macros from a given dynamic library. \xe2\x80\xa6ClReturns a list of available macros in a dynamic library. \xe2\x80\xa6CiWhether we\xe2\x80\x99re looking up a dotted method call (like \xe2\x80\xa6CfRepresents a dynamically loaded library containing \xe2\x80\xa6BgSee <code>sub_namespace_match()</code>.DhLooking up a method call like <code>v.len()</code>: We only consider \xe2\x80\xa6AfGo from ! to any type.0B`The <code>None</code> lang item.0B`The <code>Some</code> lang item.0CgGiven a region <code>R</code>, expands to the function:0Ek<code>Fn</code>-family parenthesized traits, e.g. <code>impl Fn(u32) -&gt; String</code>\xe2\x80\xa6BgThe <code>partial_ord</code> lang item.0CmOptional pre-release identifier on a version string. This \xe2\x80\xa6BfE.g., <code>Iterator::Item = T</code>.Do<code>where &lt;T as TraitRef&gt;::Name == X</code>, approximately. See the \xe2\x80\xa61010Ba<code>|i32, i32| -&gt; i32</code>0CcWrapper around a relative <code>Utf8PathBuf</code>.CiA way to match import map contents against the search \xe2\x80\xa60CiDisplay types for inserting them in source files. The \xe2\x80\xa6Dg<code>SourceFile</code> represents a parse tree for a single Rust file.CkFiles are grouped into source roots. A source root is a \xe2\x80\xa60CkRepresents a completed <code>SyntaxEditor</code> operation.EnThe kind of syntax node, e.g. <code>IDENT</code>, <code>USE_KW</code>, or <code>STRUCT</code>.0C`Information associated with a package\xe2\x80\x99s targetBoTrait impls defined or available in some crate.BoUnnamed alias, as in <code>use Foo as _;</code>BgThe <code>unsafe_cell</code> lang item.0DlWindows path prefixes, e.g., <code>C:</code> or <code>\\\\server\\share</code>.AlA type-level constant value.0CmSee the <code>error_reporting</code> module for more details.0ClThis is a \xe2\x80\x9cconditional bound\xe2\x80\x9d that checks the result \xe2\x80\xa60Dn<strong>SemVer version requirement</strong> describing the intersection of \xe2\x80\xa6BnVisibility of an item, with the path resolved.0BfNo syntax: <code>T</code> well-formed.00DnEquivalent of <code>Utf8Path::join</code> for <code>AbsPath</code> with an \xe2\x80\xa60EaInserts <code>$0</code> marker into the <code>text</code> at <code>offset</code>.CnDensely allocates multiple values, returning the values\xe2\x80\x99 \xe2\x80\xa6ChWhether dropping should detach the thread instead of \xe2\x80\xa6CiProvides in-place mutable access to an occupied entry \xe2\x80\xa6CbPossible attributes for the attribute-like macros.ChPath corresponding to the build system-specific file \xe2\x80\xa6DgThe bitwise negation (<code>!</code>) of the bits in a flags value, \xe2\x80\xa600000000000DfProduces an iterator over the <code>Utf8Component</code>s of the path.CeTopmost parent of this module. Every module has a \xe2\x80\xa6BiReturns the root file of the given crate.BiReturns crates that this file belongs to.BiWhether this item is marked as deprecated0CeThe intersection of a source flags value with the \xe2\x80\xa600000000000DeDefines <code>ExpressionStore</code>: a lowered representation of \xe2\x80\xa6BhExtra args to pass to the cargo command.0BkCrate data that is not needed for analysis.0AoDeals with field init shorthand0CmBuild a empty search scope spanning the text range of the \xe2\x80\xa60BjRange which encompasses the whole element.Cc<code>hir_expand</code> deals with macro expansion.C`A map of all publicly exported items in a crate.0CnConstructs a new instance where names will be looked up as \xe2\x80\xa6ClInitialize the connection. Sends the server capabilities \xe2\x80\xa6DbHandle syntactic aspects of inserting a new <code>use</code> item.DhInsert an import path into the given file/node. A <code>merge</code> \xe2\x80\xa6CmWhether any set bits in a source flags value are also set \xe2\x80\xa600000000000DkThe file\xe2\x80\x99s content at <code>path</code> has been modified, and should \xe2\x80\xa6ClIf true, this block lies on an unwind path. This is used \xe2\x80\xa60CoReturns <code>true</code> if the change is <code>Create</code>.CgChecks whether this syntax kind is a strict or weak \xe2\x80\xa60AmSysroot or crates.io library.0CmReturns true if this is a fake name for things missing in \xe2\x80\xa60CeThe macro-expander is missing or has yet to be build.CkWhether this dependency is to be added to the depending \xe2\x80\xa6DkReturns <code>true</code> if the path exists on disk and is pointing at \xe2\x80\xa6CbWhether this dependency is a sysroot injected one.CjDescribes items defined or visible (ie, imported) in a \xe2\x80\xa6BlYield a set of contained named flags values.00000000000ChReturns an edit to remove all newlines in the range, \xe2\x80\xa6BfFunctions to detect special lang itemsAkSee <code>LineIndex</code>.CmLoads a Cargo project into a static instance of analysis, \xe2\x80\xa6CnLoads a proc-macro dylib into the server process returning \xe2\x80\xa6CfA language server scaffold, exposing a synchronous \xe2\x80\xa6BhWhether to highlight the macro call bangAgArgument of macro call.AhName of macro to expand.CbDefines the <code>mixed_site</code> span location.CeConstructs an inline variant of <code>SmolStr</code>.DeConstructs a <code>SmolStr</code> from a statically allocated string.ClEnsures a value is in the entry by inserting the default \xe2\x80\xa6EdInvariant: Only [<code>SyntaxContext::ROOT</code>] has a <code>None</code> outer \xe2\x80\xa6FfReturns <code>&quot;&quot;</code> (empty string) or <code>&quot;mut &quot;</code> depending on the \xe2\x80\xa60CcNameres-specific procedural macro data and helpers.AiProc Macro Expander stuffCmWorking with the fixtures in r-a tests, and providing IDE \xe2\x80\xa6ClA utility function that ranks a token again a given kind \xe2\x80\xa6ChAll references found, grouped by file. For ADTs when \xe2\x80\xa6CbRepository as given in the <code>Cargo.toml</code>BjThe place to store the resume argument in.0ClCurrent selections. Search/replace will be restricted to \xe2\x80\xa6BbSet this handle\xe2\x80\x99s configuration.AmItem signature IR definitionsDgReturns the <code>let</code> only if there is exactly one (that is, \xe2\x80\xa6BaList of statements in this block.0CeThe intersection of a source flags value with the \xe2\x80\xa600000000000DaOptional path to use instead of <code>target</code> when buildingAjTerminator for this block.0AkAssorted testing utilities.DhReturns the <code>TokenTree</code> at the cursor if it is not at the \xe2\x80\xa6DgReturns <code>Ok(true)</code> if the path points at an existing entity.BnSee <code>CompletionRelevanceTypeMatch</code>.0CmReturns an iterator over mutable references to the values \xe2\x80\xa6CfReturns an iterator over the arena\xe2\x80\x99s mutable values.DfThis is equivalent to <code>CanonicalVarValues</code>, but using a \xe2\x80\xa60EgAn implementation of <code>loader::Handle</code>, based on <code>walkdir</code> and \xe2\x80\xa6BcDeclared visibility of this module.DiDefines hir-level representation of visibility (e.g. <code>pub</code> \xe2\x80\xa6BkWrites a JSON message to the output stream.DgSeparate from <code>ClauseKind::Projection</code> which is used for \xe2\x80\xa600DjThe <code>align_offset</code> lang item. Align offset for stride != 1; \xe2\x80\xa60BhThe <code>alloc_layout</code> lang item.0DiAn iterator over <code>SyntaxNode</code> children of a particular AST \xe2\x80\xa6BiThe <code>async_fn_once</code> lang item.0AkA built-in attribute macro.0BhBinding modes inferred for patterns. \xe2\x80\xa6BhThe <code>bitor_assign</code> lang item.0BoCargo calls this kind <code>custom-build</code>Bg<code>global_allocator</code> and such.AmDifferent unsigned int types.0BeChanged file in the <code>Vfs</code>.CmConstants must be equal. The first component is the const \xe2\x80\xa600DkReturns something that indirectly constructs the <code>Self</code> type \xe2\x80\xa6CoUsed with keywords like <code>if</code> and <code>break</code>.AeOrigin of the crates.Bn<code>macro_rules!</code> or Macros 2.0 macro.0AkThe defs which have a body.BhThe <code>deref_target</code> lang item.0ClDisplay types for inlays, doc popups, autocompletion, etc\xe2\x80\xa6DbThe <code>Entry</code> is represented by <code>Directories</code>.BlSpecifies a set of files on the file system.Bh<code>$crate</code> from macro expansion0BiThe <code>drop_in_place</code> lang item.0BhThe <code>dyn_metadata</code> lang item.0CgWhen there is a generic enum, within the expression \xe2\x80\xa60DkExpands a procedural macro. Since [<code>NO_VERSION_CHECK_VERSION</code>\xe2\x80\xa6BoReturns result of a macro expansion. Since [\xe2\x80\xa6CjRepresents a macro expansion request sent from the client.ChRepresents global expansion settings, including span \xe2\x80\xa6DbIndicates whether the struct has a <code>#[fundamental]</code> \xe2\x80\xa6CfA terminator for blocks that only take one path in \xe2\x80\xa60BhThe <code>format_count</code> lang item.0DeGeneric arguments to a path segment (e.g. the <code>i32</code> in \xe2\x80\xa6BoContains the results when hovering over an itemCiThe token can join with the following token to form a \xe2\x80\xa6000ClParts of the def map that are only needed when analyzing \xe2\x80\xa6Dk<code>MacroCallId</code> identifies a particular macro invocation, like \xe2\x80\xa6CnSearches a crate for pattern matches and possibly replaces \xe2\x80\xa6AnFinds the max universe present0BhThe <code>maybe_uninit</code> lang item.0BlThe defs which can be visible in the module.0DfA <code>Vec</code> that is guaranteed to at least contain one element.BiInformation associated with a cargo crateDj<code>PackageRoot</code> describes a package root folder. Which may be \xe2\x80\xa6b()BhThe <code>phantom_data</code> lang item.0CnA placeholder const - universally quantified higher-ranked \xe2\x80\xa6CnA placeholder type, used during higher ranked subtyping to \xe2\x80\xa610CkA placeholder snippet (e.g. <code>${0:placeholder}</code>).BhThe <code>pointer_like</code> lang item.0BcThe <code>Pending</code> lang item.0C`Roots and crates that compose this Rust project.CjLate-bound function parameters are represented using a \xe2\x80\xa60AgSpanmap for a real file0CmDatabase which stores all significant input facts: source \xe2\x80\xa6DiGenerally, <code>search_scope</code> returns files that might contain \xe2\x80\xa60CmRepresents errors encountered when communicating with the \xe2\x80\xa6CfA static representation of fully analyzed source code.CkRepresents the result of unsuccessful tokenization, parsingBgThe <code>termination</code> lang item.0BnA trait method with self parameter. For \xe2\x80\x98\xe2\x80\xa6ClIdentifier produced by a transparent expansion is always \xe2\x80\xa60CkA TypeOrConstParamId with an invariant that it actually \xe2\x80\xa6CjNo binding annotation given: this means that the final \xe2\x80\xa6CmAn unnormalized const item such as an anon const or assoc \xe2\x80\xa60CaIndicates a terminator that can never be reached.0CkAn owned, mutable UTF-8 path (akin to <code>String</code>).DiA view into an vacant entry in a <code>ArenaMap</code>. It is part of \xe2\x80\xa6CkA view into a single empty location in an <code>Map</code>.GgVerbatim prefix using Windows\xe2\x80\x99 <em><strong>U</strong>niform <strong>N</strong>aming <strong>C</strong>onvention</em>,EcDescribes the things that some <code>GenericKind</code> value <code>G</code> is \xe2\x80\xa60AbCargo\xe2\x80\x99s version.Cj<code>(line, column)</code> information in wide encodings.CmReturns a slice with all possible jump targets (including \xe2\x80\xa60D`Whether to pass <code>--all-targets</code> to cargo invocations.ChConverts a <code>Utf8Path</code> to a <code>Path</code>.CgWrap the given absolute path in <code>AbsPathBuf</code>0AlAdd an offset to this range.DaChecked addition. Returns <code>None</code> if overflow occurred.1010101010BcSubtract an offset from this range.DdChecked subtraction. Returns <code>None</code> if overflow occurred.1010101010CiInformation about the Git repository we may have been \xe2\x80\xa6BkComputes completions at the given position.CkMain entry point for completion. We run completion as a \xe2\x80\xa6FhConstraints of the form <code>A &lt;= B</code>, where either <code>A</code> or <code>B</code> can be \xe2\x80\xa60AeCheck if types unify.Cethe total number of crates that have finished priming0CfThe current working directory for the macro expansion.CjInformation about the declaration site of the searched \xe2\x80\xa6DgCompiled declarative macro expanders (<code>macro_rules!</code> and \xe2\x80\xa6CbReturns a string describing the kind of this type.CcDescription as given in the <code>Cargo.toml</code>BhWhere the returned value will be written0DgRe-export diagnostics such that clients of <code>hir</code> don\xe2\x80\x99t \xe2\x80\xa6CgFills <code>acc</code> with the module\xe2\x80\x99s diagnostics.BoGet a reference to the def map\xe2\x80\x99s diagnostics.CbGet a reference to the source map\xe2\x80\x99s diagnostics.BoDiagnostics emitted during DefMap construction.2BaType inference-based diagnostics.CjReturns the textual content of a doc comment node as a \xe2\x80\xa6CeFIXME: Get rid of this, it\xe2\x80\x99s not a good abstraction0AlSee <code>FamousDefs</code>.CnIf not crate is found for the file, try to return the last \xe2\x80\xa6DnThis returns a <strong>flat</strong> structure of tokens (subtrees will be \xe2\x80\xa6DbA \xe2\x80\x9cmost interesting\xe2\x80\x9d range within the <code>full_range</code>.BfParses <code>format_args</code> input.CjConverts an <code>OsStr</code> to a <code>Utf8Path</code>.BgOpposite of <code>LangItem::name</code>0DdThe file id for both the <code>ptr</code> and <code>name_ptr</code>.Dk<code>assists</code> crate provides a bunch of code assists, also known \xe2\x80\xa6DkThe path to use in the <code>use</code> statement for a given candidate \xe2\x80\xa6CmReturns a list of the places in the file where type hints \xe2\x80\xa6CnThis module contains code to instantiate new values into a \xe2\x80\xa6CkInstantiate the wrapped value, replacing each canonical \xe2\x80\xa61EdConsumes the <code>Utf8PathBuf</code>, yielding its internal <code>String</code> \xe2\x80\xa6EfReturns <code>true</code> if the <code>Utf8Path</code> is absolute, i.e., if it is \xe2\x80\xa6EbIs this <code>asm!()</code>, or a variant of it (e.g. <code>global_asm!()</code>)?ChThe macro is explicitly disabled and cannot be expanded.DjIs this type parameter implicitly introduced (eg. <code>Self</code> in \xe2\x80\xa6CoReturns <code>true</code> if the change is <code>Modify</code>.EaReturns <code>true</code> if the <code>Utf8Path</code> is relative, i.e., not \xe2\x80\xa6CkReturns true when the score for this threshold is above \xe2\x80\xa60DdIs this function marked as unstable with <code>#[feature]</code> \xe2\x80\xa6DaWhether this item is annotated with <code>#[unstable(..)]</code>.0CkDetermines if the prefix is verbatim, i.e., begins with \xe2\x80\xa6ClConvert to option, preferring the left leaf in case of a \xe2\x80\xa6CnIndex of the matched macro arm on successful expansion for \xe2\x80\xa60FjReturns <code>&quot;&quot;</code> (empty string) or <code>&quot;mutably &quot;</code> depending on the \xe2\x80\xa60BiThings relevant to the next trait solver.0ChThis is inbounds of the type of the niche field (not \xe2\x80\xa6BhNumber of type variables created so far.0DjThe index of the generic parameter being used (e.g. <code>0</code> for \xe2\x80\xa6000B`Whether to highlight punctuationBiThe target normal control flow will take.000ClA type of the item that has the associated item accessed \xe2\x80\xa6BfReturns the scopes in ascending order.BjWhat kind of symbol is being searched for.CcReturns the absolute path to the proc-macro server.CcBuild a empty search scope spanning the given file.0CjReturns all final segments of the argument, longest first.CmStrips parts of minicore.rs which are flagged by inactive \xe2\x80\xa6AlContents of the source root.AhSource root of the file.00EaReturns <code>true</code> if <code>other</code> is a prefix of <code>self</code>.DfDetermines whether <code>base</code> is a prefix of <code>self</code>.1BbSpecifies the target architecture.CoRuns <code>rustc --print target-spec-json</code> to get the \xe2\x80\xa6AcThe kind of target.kTerm search0DfConverts a <code>Utf8Path</code> to an owned <code>Utf8PathBuf</code>.DjEquivalent of <code>Utf8Path::to_path_buf</code> for <code>AbsPath</code>.DjEquivalent of <code>Utf8Path::to_path_buf</code> for <code>RelPath</code>.1BaList the traits used in type treeEdInvokes <code>try_reserve</code> on the underlying instance of <code>PathBuf</code>.BdIs this type known to be uninhabted?CbMaps a child node of the input ancestor to the \xe2\x80\xa6BgInterns a possibly-unknown target usizeD`<code>AnalysisHost</code> stores the current state of the world.AhPath relative to a file.0CiXXX: AST Nodes and SyntaxNodes have identity equality \xe2\x80\xa6BiThe <code>bitand_assign</code> lang item.0BiThe <code>bitxor_assign</code> lang item.0EhBuilt-in eagerly expanded fn-like macros (<code>include!</code>, <code>concat!</code>\xe2\x80\xa6BaA set of cfg-overrides per crate.CkA TypeOrConstParamId with an invariant that it actually \xe2\x80\xa6BjThe <code>const_param_ty</code> lang item.0CnA CopyForDeref is equivalent to a read from a place at the \xe2\x80\xa60CjA macro that derives implementations for a struct or enum.CnProject with a set of disjoint files, not belonging to any \xe2\x80\xa6DhThe <code>discriminant_type</code> lang item. The associated item of \xe2\x80\xa6CnComputes the discriminant of the place, returning it as an \xe2\x80\xa610DgA struct to map text ranges from <code>Documentation</code> back to \xe2\x80\xa6BjThe <code>fn_once_output</code> lang item.0BiThe <code>future_output</code> lang item.0ClA struct to find imports in the project, given a certain \xe2\x80\xa6BcInclude impls from the given block.BjUsed for intra doc links in doc injection.B`The <code>next</code> lang item.0CkA type signaling that a value is either computed, or is \xe2\x80\xa6CjMore or less <code>AbsPathBuf</code> with non-None parent.BiThe <code>manually_drop</code> lang item.0EfThis is similar to <code>NameClass</code>, but works for <code>ast::NameRef</code> \xe2\x80\xa6BmA name that will be used during item lookups.CiThis should only be used inside of the new solver for \xe2\x80\xa600C`Dummy for leveraging RAII cleanup to pop frames.BiThe <code>panic_display</code> lang item.0CnRepresents an error message when a macro expansion results \xe2\x80\xa6BiThe <code>pointee_sized</code> lang item.0BiThe <code>pointee_trait</code> lang item.0CaAfter analysis, mostly during codegen and MIR \xe2\x80\xa60CjA region parameter; for example <code>&#39;a</code> in \xe2\x80\xa60AeThe kind of runnable.BjRust Analyzer-specific span handling mode.BnConfiguration settings for the proc-macro-srv.ClA snippet scope describing where a snippet may apply to. \xe2\x80\xa60CgA property of a macro expansion that determines how \xe2\x80\xa60FaDerives <code>TypeFoldable</code> for the annotated <code>struct</code> or <code>enum</code> (\xe2\x80\xa6CkA hasher designed to eke a little more speed out, given \xe2\x80\xa6Al<code>where T: &#39;r</code>00AfAn unsafe binder type.0BiThe <code>unsafe_pinned</code> lang item.0CkIndicates that the landing pad is finished and that the \xe2\x80\xa60C`Verbatim disk prefix, e.g., <code>\\\\?\\C:</code>.BbA kind of wide character encoding.B`Add a new set of paths prefixes.CiApplies changes to the current state of the world. If \xe2\x80\xa6DoGiven <code>change</code> this generates a new <code>Config</code>, thereby \xe2\x80\xa6DkThe <code>backend_repr</code> defines how this data will be represented \xe2\x80\xa6D`The bitwise or (<code>|</code>) of the bits in two flags values.00000000000BcThis module defines built-in types.CmReturns the canonical, absolute form of the path with all \xe2\x80\xa6ClThe meaning of CHALK_DEBUG is to tell chalk crates (i.e. \xe2\x80\xa6CkObtains the latest type of the given closure; this may be a0EdExecute <code>f</code> and commit the bindings if closure <code>f</code> returns \xe2\x80\xa60E`Returns <code>true</code> if <code>path</code> is included in <code>self</code>.0CnReturns whether the map contains a value for the specified \xe2\x80\xa6CnExtends the range to cover <code>other</code> offsets as well.00000Blthe total number of crates we want to prime.0AoThe dependencies of this crate.0BhList of packages this package depends onCaIndex of the derive macro in the derive attributeCkA name used in the package\xe2\x80\x99s project declaration: for \xe2\x80\xa6DfReturns a String representation of <code>self</code> for test purposes0CgReplaces all bound variables (lifetimes, types, and \xe2\x80\xa60CmWhen rendering something that has a concept of \xe2\x80\x9cchildren\xe2\x80\xa6EaPath of the form <code>Enum::Variant</code> (and not <code>Variant</code> alone).EeExtracts ranges, marked with <code>&lt;tag&gt; &lt;/tag&gt;</code> pairs from the \xe2\x80\xa6CkGenerates <code>features_generated.md</code> documentation.BoKeeps track of all edits performed on each fileFi<strong>Warning</strong>: This advances <code>skip</code> <strong>flat</strong> token trees, subtrees \xe2\x80\xa6BmSuggest name of variable for given expressionCn<code>{}</code>, <code>{:?}</code>, or <code>{:x}</code>, etc.DfWhether the <code>GenericArgs</code> contains a <code>Self</code> arg.0EeChecks that particular type <code>ty</code> implements <code>std::ops::FnOnce</code>.DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.00000000000CdLicense file as given in the <code>Cargo.toml</code>CmMaps the original, immutable <code>SyntaxNode</code> to a \xe2\x80\xa6CnWhether this name needs to be escaped in the given edition \xe2\x80\xa60EaA <code>RawAttrs</code> that has its <code>#[cfg_attr(...)]</code> attributes \xe2\x80\xa6BnThings related to the infer context of the \xe2\x80\xa60CaThe new, unstable <code>macro m {}</code> flavor.0CnReturn a <code>PathBuf</code> to use for the given executable.Chrust-analyzer is lazy and doesn\xe2\x80\x99t compute anything \xe2\x80\xa6DjIf <code>TyVar(vid)</code> resolves to a type, return that type. Else, \xe2\x80\xa60Bk<code>rust-project.json</code> file format.C`Returns the path to the project\xe2\x80\x99s root folder.DhReturns the path to the root directory of <code>rust-analyzer</code> \xe2\x80\xa60BaMaps between ranges in documents.ClThis will either replace the initializer, or in the case \xe2\x80\xa6CjGet the id of the file corresponding to <code>path</code>.0CmConvert to option, preferring the right leaf in case of a \xe2\x80\xa6CgGet the workspace\xe2\x80\x99s root package of this metadata \xe2\x80\xa6CdRust version as given in the <code>Cargo.toml</code>Ajrustc private crate sourceBdHow many items are returned at most.BoIn what scope should the symbol be searched in.BlRange of identifier that is being completed.0CmSplits off the given prefix, making it the path component \xe2\x80\xa6Af#[path = \xe2\x80\x9cstring\xe2\x80\x9d]0EbReturns a path that, when joined onto <code>base</code>, yields <code>self</code>.DkEquivalent of <code>Utf8Path::strip_prefix</code> for <code>AbsPath</code>.0CgThis module contains functions to suggest names for \xe2\x80\xa6CkSuggest a name without conflicts. If the name conflicts \xe2\x80\xa6CmThis module handles fuzzy-searching of functions, structs \xe2\x80\xa6CjDrain and returns all the changes in the <code>Vfs</code>.CfFunctionality to discover the current build target(s).CiA set of high-level utility fixture methods to use in \xe2\x80\xa6CnFIXME: this only lists trait bounds from the item defining \xe2\x80\xa6DdLike <code>SyntaxNodePtr::cast</code> but the trait bounds work out.DaTransforms the <code>TextSize</code> into a <code>LineCol</code>.0CnTurns this ADT into a type with the given type parameters. \xe2\x80\xa6CjMap from the universes that appear in the query to the \xe2\x80\xa60DhComputes a list of present or absent atoms in <code>opts</code> that \xe2\x80\xa6ClAn item body together with the mapping from syntax nodes \xe2\x80\xa6DjOptional build metadata identifier. This comes after <code>+</code> in \xe2\x80\xa6Bc<code>derive(Copy)</code> and such.CkThe current latest stable edition, note this is usually \xe2\x80\xa60000BkThe <code>call_ref_future</code> lang item.0Dh<code>{closure#14825}</code>, useful for some diagnostics (like type \xe2\x80\xa60BjThe <code>coerce_unsized</code> lang item.0BkThe <code>const_panic_fmt</code> lang item.0BjIndicates the end of dropping a coroutine.0CcIdentifies a crate by position in the crates array.CnThe defs which have a body (have root expressions for type \xe2\x80\xa6AdA builtin-in derive.0AjDoc-strings like this one.AcHolds documentation0AmTrait must be dyn-compatible.00BjThe <code>eh_personality</code> lang item.0ChExpansionInfo mainly describes how to map text range \xe2\x80\xa6EhThis contains path prefixes to partition a <code>Vfs</code> into <code>FileSet</code>\xe2\x80\xa6CjA simple delegate taking 3 mutable functions. The used \xe2\x80\xa60ClData about the generic parameters of a function, struct, \xe2\x80\xa6Dj<code>#[rust_analyzer::completions(ignore_methods)]</code> (on a trait \xe2\x80\xa60Ee<code>InFile&lt;T&gt;</code> stores a value of <code>T</code> inside a particular \xe2\x80\xa60BeInherent impls defined in some crate.CjThese should not occur, usually indicates a bug in mir \xe2\x80\xa600DcAn ID of a module, <strong>local</strong> to a <code>DefMap</code>.CmAn import (not necessary the only one) that corresponds a \xe2\x80\xa6BdThe macro for this call is disabled.B`What type of merges are allowed.AgGenerator for new namesDkA view into an occupied entry in a <code>ArenaMap</code>. It is part of \xe2\x80\xa6CnA view into a single occupied location in an <code>Map</code>.BjThe <code>panic_location</code> lang item.0BjThe <code>panic_nounwind</code> lang item.0Dc<code>PathTransform</code> substitutes path in SyntaxNodes in bulk.CcA \xe2\x80\x9cplaceholder\xe2\x80\x9d that represents \xe2\x80\x9cany type\xe2\x80\x9d.0ClRepresents different kinds of procedural macros that can \xe2\x80\xa6BhVisibility of an item, not yet resolved.CiA placeholder region \xe2\x80\x93 the higher-ranked version of \xe2\x80\xa60CnA request failed but it was syntactically correct, e.g the \xe2\x80\xa6C`Describes how to set the rustc source directory.CmContains information about an item signature as seen from \xe2\x80\xa6DkHold the <code>AssistId</code> data of a certain assist to resolve. The \xe2\x80\xa600D`The <code>structural_peq</code> lang item. Trait injected by \xe2\x80\xa60D`The <code>structural_teq</code> lang item. Trait injected by \xe2\x80\xa60ClA syntax context describes a hierarchy tracking order of \xe2\x80\xa6DeA \xe2\x80\x9cpointer\xe2\x80\x9d to a <code>SyntaxNode</code>, via location in the \xe2\x80\xa6CaContext for the <code>term_search</code> functionCiThere might be zero, one or two leaves at a given offset.CeParse the whole of the input as a given syntactic \xe2\x80\xa60BjThe <code>transmute_opts</code> lang item.0BiThis is used as a key for indexing impls.0CgData about a generic type parameter (to a function, \xe2\x80\xa6FbDerives <code>TypeVisitable</code> for the annotated <code>struct</code> or <code>enum</code> (\xe2\x80\xa6AmA single component of a path.DfWraps <code>TokenTreesView</code> with a delimiter (a subtree, but \xe2\x80\xa6CcReturns the name under which this crate is made \xe2\x80\xa6BiThe annotation id if this is an annotatedDkReturns the <code>CrateRootModuleId</code> for this module if it is the \xe2\x80\xa6ClConstructs an instance using the start of the first file \xe2\x80\xa6CjGenerates large snippets of Rust code for usage in the \xe2\x80\xa6DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.00000000000DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa600000000000CkHelper function to create a build command for rust-analyzerBkThe build script results for the workspace.BeReturns the type of <code>*ty</code>.0CkThis module contains code to canonicalize values into a \xe2\x80\xa60BjA set of cfg overrides for this workspace.DjReturns vec of <code>mod name;</code> declaration which are created by \xe2\x80\xa6CiTraverses both paths until they differ, returning the \xe2\x80\xa6E`Returns <code>true</code> if <code>path</code> is included in <code>self</code>.0BgReturns the edition of the given crate.BjDocumentation attribute related utilities.AkStructural editing for ast.C`Whether to exclude tests from the call hierarchyBfAssert that the predicate is a clause.0DiIs this a function with an <code>export_name</code> of <code>main</code>?ClReturns URL(s) for the documentation of the symbol under \xe2\x80\xa6CgInfallible version of <code>try_extract_range()</code>.DfGet the id corresponding to <code>path</code> if it exists in the set.0ClFinds a path that can be used to refer to the given item \xe2\x80\xa6BbFlips the polarity of a Predicate.0CeTools to work with format string literals for the \xe2\x80\xa6EhAppends formatted string to a <code>String</code> and returns the <code>String</code>\xe2\x80\xa6Dg<code>true</code> if this is from a call in HIR rather than from an \xe2\x80\xa60EgCreates a new <code>Utf8PathBuf</code> from a <code>PathBuf</code> containing valid \xe2\x80\xa6EiThis does <strong>not</strong> resolve <code>IntoFuture</code>, only <code>Future</code>.CnThis specifies whether the args contain a Self type as the \xe2\x80\xa6BcLook up accessible paths for items.BoThe import data to add to completion\xe2\x80\x99s edits.0EgConverts a <code>Box&lt;Utf8Path&gt;</code> into a <code>Utf8PathBuf</code> without \xe2\x80\xa6CdWhether this module represents the crate root moduleD`Whether this item is annotated with <code>#[doc(hidden)]</code>.0DdChecks if the self parameter of <code>Trait</code> method is the \xe2\x80\xa6AkIs this target a proc-macroCmfalse if the block is an intrinsic part of the syntax and \xe2\x80\xa6CkThis module has the functionality to search the project \xe2\x80\xa6EmThis does <strong>not</strong> resolve <code>IntoIterator</code>, only <code>Iterator</code>.CmThe leaf scalar with the largest number of invalid values \xe2\x80\xa6ClIterate over all legacy textual scoped macros visible at \xe2\x80\xa6AkThe region <code>R0</code>.0BmHandle syntactic aspects of merging UseTrees.CnCreates a new index range inclusive of the start value and \xe2\x80\xa6CgCreate a path from string. Input should be a string \xe2\x80\xa60EhCreates a new <code>RelPath</code> from <code>path</code>, without checking if it is \xe2\x80\xa6AmSee <code>NonEmptyVec</code>.CmReturns an edit which should be applied after a character \xe2\x80\xa6BdThe path import candidate, resolved.CjA micro-crate to enhance panic messages with context info.DjReturns a <code>mod name;</code> declaration which created the current \xe2\x80\xa6ClWhether these generic args were written with parentheses \xe2\x80\xa6DhGet the path corresponding to <code>file</code> if it exists in the set.0CjConverts the place to a name that can be inserted into \xe2\x80\xa60BhSet for postfix snippet item completions0DkIf true, prefer to unconditionally use imports of the <code>core</code> \xe2\x80\xa600CjPreorder walk all the expression\xe2\x80\x99s child expressions \xe2\x80\xa6CmIn rust-analyzer, we maintain a strict separation between \xe2\x80\xa6ChReturns an iterator over the entries within a directory.CeReturns the set of tests for the given file position.EhInvokes <code>reserve_exact</code> on the underlying instance of <code>PathBuf</code>\xe2\x80\xa6BlImplementation of the LSP for rust-analyzer.CnUpdates <code>self.extension</code> to <code>extension</code>.CnUpdates <code>self.file_name</code> to <code>file_name</code>.CdShrinks the capacity of the map as much as possible.ClReallocates the arena to make it take up as little space \xe2\x80\xa6EhInvokes <code>shrink_to_fit</code> on the underlying instance of <code>PathBuf</code>\xe2\x80\xa6CnComputing source change sometimes is much more costly then \xe2\x80\xa600CiThis modules defines type to represent changes to the \xe2\x80\xa6AlFuzzy searches for a symbol.DkConversions between <code>SyntaxNode</code> and <code>tt::TokenTree</code>.AbSyntax Tree editorBnCreate a new empty map with specific capacity.C`Create a new empty arena with specific capacity.DhCreates a new <code>Utf8PathBuf</code> with a given capacity used to \xe2\x80\xa6DiCreates a new <code>SyntaxFactory</code>, generating mappings between \xe2\x80\xa6CkGo from <code>*const [T; N]</code> to <code>*const T</code>0CaSearch for the name in the associated items only.00BlThe <code>call_once_future</code> lang item.0Dj<code>CargoWorkspace</code> represents the logical structure of, well, \xe2\x80\xa6CjData must be immutable but not aliasable. This kind of \xe2\x80\xa60Dj<code>CompletionItem</code> describes a single completion entity which \xe2\x80\xa60ChData about a generic const parameter (to a function, \xe2\x80\xa6Eg<code>None</code> in <code>if let None = Some(82) {}</code>. Syntactically, it is a \xe2\x80\xa6BkThe <code>coroutine_state</code> lang item.0BkThe <code>coroutine_yield</code> lang item.0CjUsed for items from built-in crates (std, core, alloc, \xe2\x80\xa6CcMay have a drop glue if some type parameter has it.0BnDrops the place and assigns a new value to it.0CkAn elided lifetimes was used (either implicitly, by not \xe2\x80\xa6CgSignal we cannot find which should be the anonymous \xe2\x80\xa6BkThe <code>exchange_malloc</code> lang item.0BaCrate data unrelated to analysis.AoA wrapper around three booleans0BkThe <code>format_argument</code> lang item.0CgA constant, which might appears as a const item, an \xe2\x80\xa6oA generic paramCiIndicates whether this struct is <code>UnsafeCell</code>.DhThis type contains all the things within <code>InferCtxt</code> that \xe2\x80\xa60AgUsed in range patterns.Ae<code>some_var</code>0ChThe extracted message was of a different method than \xe2\x80\xa6CmUsed if you want to have pleasant experience when dealing \xe2\x80\xa60BkThe <code>receiver_target</code> lang item.0Ba<code>where &#39;a: &#39;r</code>00BlGo from a fn-item type to a fn-pointer type.0Dk<code>SemanticsScope</code> encapsulates the notion of a scope (the set \xe2\x80\xa6EeTransmutes a <code>*mut u8</code> into shallow-initialized <code>Box&lt;T&gt;</code>.0DgA builder that can be used to efficiently build a <code>SmolStr</code>.DgEnforce that <code>a</code> is equal to or a subtype of <code>b</code>.0CfCreates a pointer/reference to the given thread local.0CnA trait associated function (with no self parameter) or an \xe2\x80\xa6BkThe <code>transmute_trait</code> lang item.0BbThe <code>branch</code> lang item.0Ag<code>SomeStruct</code>0Ag<code>SOME_CONST</code>0DlAn iterator over the <code>Utf8Component</code>s of a <code>Utf8Path</code>.C`A single predicate from a where clause, i.e. \xe2\x80\xa6DfIf true, paths containing <code>#[unstable]</code> segments may be \xe2\x80\xa60CkReturns the tuple index this name represents if it is a \xe2\x80\xa60ClAsserts that two strings are equal, otherwise displays a \xe2\x80\xa6CnSubtype of the assist. When many assists have the same id, \xe2\x80\xa600CiComputes call hierarchy candidates for the given file \xe2\x80\xa6CaRespect casing of the query string when matching.0B`The options <code>O1..On</code>.0CmCompare the major, minor, patch, and pre-release value of \xe2\x80\xa6CkReturns unique params for types and consts contained in \xe2\x80\xa6B`The <code>Config</code> version.CfCheck if this range completely contains another range.00000BnCreates an all-error <code>GenericArgs</code>.0CkReturn expansion information if it is a macro-expansion \xe2\x80\xa60CiLimits crates in the extern prelude. The set of crate \xe2\x80\xa6BaExtra includes to add to the VFS.BgAdditional includes to add for the VFS.ChInfallible version of <code>try_extract_offset()</code>.CiReturns a tree representation of symbols in the file. \xe2\x80\xa6BbReturns the set of folding ranges.CdCreates a TyFingerprint for looking up a trait impl.0Dc<code>{}</code> or <code>{:.5}</code> or <code>{:-^20}</code>, etc.DdFormats arguments to a <code>SmolStr</code>, potentially without \xe2\x80\xa6EcCreates a new <code>Utf8PathBuf</code> from an <code>OsString</code> containing \xe2\x80\xa6CkCaller should check if this toc id really belongs to a typeCjCaller should check if this toc id really belongs to a \xe2\x80\xa6DaReturns unique <code>GenericParam</code>s contained in this type.DeTrue if the first param is <code>self</code>. This is relevant to \xe2\x80\xa6Dd<code>completions</code> crate provides utilities for generating \xe2\x80\xa6CdComputes incoming calls for the given file position.EfConsumes the <code>Utf8PathBuf</code>, yielding its internal <code>OsString</code> \xe2\x80\xa6CiAn item that will be imported with the import path given.DeConverts an <code>ast::TypeRef</code> to a <code>hir::TypeRef</code>.CmMaps the passed in file range down into a macro expansion \xe2\x80\xa6ChReturns position of the matching brace (all types of \xe2\x80\xa6DkThe largest alignment explicitly requested with <code>repr(align)</code>\xe2\x80\xa6CfReturns a set of names available in the current scope.CdCreate a new generator with existing names. When \xe2\x80\xa6E`This range <em>may</em> contain <code>untagged_variant</code> or uninhabited \xe2\x80\xa6CnEnsures a value is in the entry by inserting the result of \xe2\x80\xa60ChAttempts to map the node out of macro expanded files \xe2\x80\xa6CdComputes outgoing calls for the given file position.DcCustom command to be executed instead of <code>cargo</code> for \xe2\x80\xa6BgCommand to be executed instead of cargoAoSee <code>PathTransform</code>.CiIf true, prefer import paths containing a prelude module.00CdThe leftmost definition for this local. Example: \xe2\x80\xa6DgReturns the <code>Size</code> for primitive types (bool, uint, int, \xe2\x80\xa60AlClient-side Proc-Macro crateCnThe working directory to run proc-macros in invoked in the \xe2\x80\xa60AdRA Proc Macro ServerBaFiltering syntax, set in a shell:CkReads a symbolic link, returning the file that the link \xe2\x80\xa6FiReturns <code>&quot;&amp;&quot;</code> or <code>&quot;&amp;mut &quot;</code> depending on the mutability.0EfRequires that <code>ty</code> must implement the trait with <code>def_id</code> in \xe2\x80\xa60CiRegister obligations that must hold in order for this \xe2\x80\xa6000CmRange to recompute inlay hints when trying to resolve for \xe2\x80\xa6DiThis is the same as <code>Self::crate_root</code> for crate def maps, \xe2\x80\xa60CeComputes parameter information at the given position.DhBuilds upon <code>crate::ast::make</code> constructors to create ast \xe2\x80\xa6AkIterates its type argumentsDiNote: <code>VisibleTraits</code> should be treated as an opaque type, \xe2\x80\xa6EgCreates an owned <code>Utf8PathBuf</code> like <code>self</code> but with the given \xe2\x80\xa60nWorkspace rootAhPath relative to a file.0ClPerforms an API version check between the client and the \xe2\x80\xa6CkReturns the API version supported by the server. Since [\xe2\x80\xa6ClThree possible ways to search for the name in associated \xe2\x80\xa600EmSame as <code>BinaryOp</code>, but yields <code>(T, bool)</code> with a <code>bool</code> \xe2\x80\xa60ChEnsures that a const generic argument to a parameter \xe2\x80\xa600CjThe server detected that the content of a document got \xe2\x80\xa6BlThe <code>coroutine_return</code> lang item.0BmThe <code>dispatch_from_dyn</code> lang item.0EbA <code>FileId</code> and <code>Edition</code> bundled up together. The MSB is \xe2\x80\xa6BmThe <code>eh_catch_typeinfo</code> lang item.0B`This is a type erased FileAstId.CiRepresents the input data required for expanding a macro.DjInvariant: <code>inner.as_extern_assoc_item(db).is_some()</code> We do \xe2\x80\xa6Di<code>#[rustc_force_inline]</code> functions must be inlined and must \xe2\x80\xa60BlThe <code>format_alignment</code> lang item.0BlThe <code>format_arguments</code> lang item.0BmThe <code>format_unsafe_arg</code> lang item.0BjA trait engine using the new trait solver.0CiIndicates whether the struct is <code>PhantomData</code>.Cm<code>#[rust_analyzer::completions(ignore_flyimport)]</code>.0CfA candidate for import, derived during various IDE \xe2\x80\xa6ClThe result of type inference: A mapping from expressions \xe2\x80\xa6BcFIXME: Fold this into InternalError00CgThe parameter representation of late-bound function \xe2\x80\xa60AhA literal constant valueB`The macro definition has errors.CgIndex of the matched macro arm on successful expansion.C`An overloaded autoderef step, representing a \xe2\x80\xa6BiThe <code>new_unchecked</code> lang item.0CaPointer related casts that are done by coercions.0CjA handle to an external process which load dylibs with \xe2\x80\xa6CkThe client has canceled a request and a server has detectedDkConfiguration for runnable items, such as <code>main</code> function or \xe2\x80\xa6CnIdentifier produced by a semi-transparent expansion may be \xe2\x80\xa60ClThe server cancelled the request. This error code should \xe2\x80\xa6CfThis borrow arose from method-call auto-ref (i.e., \xe2\x80\xa60CkThe crate data from which we derive the <code>Crate</code>.CbGo from a safe fn pointer to an unsafe fn pointer.0BaSupport marking impl as unstable.00BhList of features enabled on this packageCkIf this package is a member of the workspace, store all \xe2\x80\xa6CkIf this is a valid cargo target, returns the name cargo \xe2\x80\xa6ClThe associated item name that the trait to import should \xe2\x80\xa6BbPost-nameres attribute resolution.CiThe \xe2\x80\x9cparent\xe2\x80\x9d macro call. We will resolve the same \xe2\x80\xa6DfReturns a <code>Display</code>able type that is human-readable and \xe2\x80\xa60B`Processes <code>cfg_attr</code>sDgGets the file\xe2\x80\x99s <code>LineIndex</code>: data structure to convert \xe2\x80\xa6ClFinds which syntax elements have been annotated with the \xe2\x80\xa6BoConverts a known mod path to <code>Path</code>.BcGenerate source code for type tree.DaReturns the definitions from the symbol at <code>position</code>.EmIf <code>req</code> is <code>Shutdown</code>, respond to it and return <code>true</code>, \xe2\x80\xa6CfComputes syntax highlighting for the given file range.BaDiagnostics rendering and fixits.DjConverts this <code>Utf8PathBuf</code> into a boxed <code>Utf8Path</code>.EeReturns true if this crate has <code>no_std</code> or <code>no_core</code> specified.CjReturns true if this file belongs to an immutable library.BjReturns a count of a few, expensive items.ClSearches for importable items with the given name in the \xe2\x80\xa6CkThe initial proc-macro-srv protocol, soon to be deprecated.CnSource location represented by this label part. The client \xe2\x80\xa6CnLoad the proc-macros for the given lib path, disabling all \xe2\x80\xa6CoReturns a copy of the <code>node</code>, suitable for mutation.CiConverts the mod path struct into its ast representation.DnReturns <code>true</code> if <code>self</code> would need to be wrapped in \xe2\x80\xa6CkCreates a fresh region variable with the next available \xe2\x80\xa60BjNumber of region variables created so far.0CiPicks the token with the highest rank returned by the \xe2\x80\xa6DhIf true, prefer abs path (starting with <code>::</code>) where it is \xe2\x80\xa600CaPrints backtrace to stderr, useful for debugging.CdExports a few trivial procedural macros for testing.BiThe release channel we were built for \xe2\x80\xa6DeThis is set for completions that will insert a <code>use</code> item.0DfReturns <code>false</code> if slow tests should not run, otherwise \xe2\x80\xa6BfKeeps track of where to place snippetsAnAdditional span data mappings.AnTable of additional span data.BfLooks up the span at the given offset.0CiReturns the spans associated with the given range. In \xe2\x80\xa6CfConstructs a matching <code>ast::GenericArgList</code>CkReturns an iterator over all transitive dependencies of \xe2\x80\xa60EeMerge <code>rhs</code> into <code>lhs</code> keeping both intact. Returned AST is \xe2\x80\xa6DhMaps a <code>UseTree</code> contained in this import back to its AST \xe2\x80\xa6BdThe type of the enum variant bodies.EdIterates all <code>ModuleDef</code>s and <code>Impl</code> blocks of the given file.CjGo from a non-capturing closure to an fn pointer or an \xe2\x80\xa60Dg<code>{closure#14825}&lt;i32, ()&gt;</code>, useful for internal usage.0C`Constant initializer must evaluate successfully.00BaThe <code>Break</code> lang item.0CjThe anonymous type of a closure. Used to represent the \xe2\x80\xa60ClA type representing the types stored inside a coroutine. \xe2\x80\xa60ChOld-style <code>macro_rules</code> or the new macros 2.0DbThis struct contains AST for a single <code>macro_rules</code> \xe2\x80\xa60BmThe <code>discriminant_kind</code> lang item.0AhSpanmap for a macro file0Biwhen two higher-ranked types are compared0CkAttributes that have a special meaning to rustc or rustdoc.CkIndicates whether this struct is <code>ManuallyDrop</code>.CkIndicates whether this struct is <code>UnsafePinned</code>.CkUsed to configure inference contexts before their creation.0BeThe <code>into_iter</code> lang item.0CnAny thread which does work caused by the user typing (e.g. \xe2\x80\xa6DiRequires that <code>region</code> must be equal to one of the regions \xe2\x80\xa60CgStores spans which implies that the local should be \xe2\x80\xa60Di<code>NavigationTarget</code> represents an element in the editor\xe2\x80\x99s \xe2\x80\xa6ClThe document on type formatting request is sent from the \xe2\x80\xa6BnThe <code>panic_bounds_check</code> lang item.0CkZero-sized type used to mark a type parameter as covariant.CkZero-sized type used to mark a type parameter as invariant.CdA \xe2\x80\x9cplaceholder\xe2\x80\x9d that represents \xe2\x80\x9cany const\xe2\x80\x9d.0BeA group of placeholder snippets, e.g.CkParse a prefix of the input as a given syntactic construct.BlThe <code>RangeToInclusive</code> lang item.0DcSee the <code>region_obligations</code> field for more information.0BiConfiguration options for the term searchCnA set of clauses that we assume to be true. E.g. if we are \xe2\x80\xa6BeThe <code>from_yeet</code> lang item.0CmExtra information about why we ended up with a particular \xe2\x80\xa6000ClThis module provides functionality for querying callable \xe2\x80\xa6ClReturns an iterator over the whole super trait hierarchy \xe2\x80\xa6CkBlocks may not be allocated (if they have no items), so \xe2\x80\xa6DmAdditional arguments for the <code>cargo</code>, e.g. <code>--release</code>.CjWhich syntax elements in the modified syntax tree were \xe2\x80\xa6DkProcesses a <code>Coerce</code> predicate from the fulfillment context. \xe2\x80\xa60BhCheck if type unifies with another type.ClSalsa query. This will look for lang items in a specific \xe2\x80\xa6DiDeeply normalizes <code>value</code>, replacing all aliases which can \xe2\x80\xa6DeDeeply normalize all aliases in <code>value</code>. This does not \xe2\x80\xa610CnGenerates <code>diagnostics_generated.md</code> documentation.CnThis is set when the identifier being completed matches up \xe2\x80\xa60ChSelects the next syntactic nodes encompassing the range.BkFind the params corresponded to generic argBbConvert from a bits value exactly.00000000000ClComputes the set of both syntax and semantic diagnostics \xe2\x80\xa6CnRequest both syntax and semantic diagnostics for the given \xe2\x80\xa6DaReturns the declaration from the symbol at <code>position</code>.ClIdeally this function wouldn\xe2\x80\x99t exist since it involves \xe2\x80\xa6Akmarker for serde skip stuffCnA block control flow could conceptually jump to, but won\xe2\x80\x99\xe2\x80\xa60BgBuiltin attributes resolved by nameres.CgStarts the initialization process by waiting for an \xe2\x80\xa6DkInitialize the connection as described in <code>Self::initialize</code> \xe2\x80\xa6BmInterns a constant scalar with the given typeCoReturns a <code>Display</code>able type that is human-readable.0CkGets the underlying snippet index + text range Tabstops \xe2\x80\xa60ClSyntactical index of the invoking <code>#[attribute]</code>.CjReturns true if at least one variant of this enum is a \xe2\x80\xa6ElReturns <code>true</code> if the <code>node</code> is inside an <code>unsafe</code> context.ChReturns the path to the project\xe2\x80\x99s manifest or root \xe2\x80\xa6CdAn expander that always errors due to the actual \xe2\x80\xa6DeCreates an \xe2\x80\x9cin-memory\xe2\x80\x9d path from <code>/</code>-separated string.0ClAsserts this is a struct or union and returns its unique \xe2\x80\xa60CnCreates a crate name, unconditionally replacing the dashes \xe2\x80\xa6CjTextual range of the identifier which will change when \xe2\x80\xa6DgReturns all <code>TextRange</code>s whose spans contain the given span.CmRelate the two args for the given item. The default is to \xe2\x80\xa6000CfDeletes the usetree node represented by the input. \xe2\x80\xa6EbChecks if renaming <code>renamed</code> to <code>new_name</code> may introduce \xe2\x80\xa6CnAttempts to build an SSR MatchFinder from a comment at the \xe2\x80\xa6CgQueries the metadata about a file without following \xe2\x80\xa6A`Target directoryEfFinds the <code>BasicBlock</code> to which this <code>SwitchInt</code> will branch \xe2\x80\xa60Aa#[path TokenTree]0CeRenders the crate graph to GraphViz \xe2\x80\x9cdot\xe2\x80\x9d syntax.DiWalks the immediate children expressions and calls <code>f</code> for \xe2\x80\xa6DaCreates a <code>SyntaxFactory</code> without generating mappings.C`The <code>async_fn_once_output</code> lang item.0ChA template that the attribute input must match. Only \xe2\x80\xa60CgExplicit binding annotations given in the HIR for a \xe2\x80\xa6Cghttps://doc.rust-lang.org/stable/error_codes/E0416.htmlCoA <code>ModuleId</code> that is always a crate\xe2\x80\x99s root module.BgReturns the Self type of the impl/traitBnThe <code>format_placeholder</code> lang item.0CbHow imports should be grouped into use statements.CkData about a generic lifetime parameter (to a function, \xe2\x80\xa6CaGo from a mut raw pointer to a const raw pointer.0Cghttps://doc.rust-lang.org/stable/error_codes/E0408.htmlBoThe <code>panic_cannot_unwind</code> lang item.0Fd<code>field</code> in <code>if let Foo { field } = foo</code>. Here, <code>ast::Name</code> both \xe2\x80\xa6CiA \xe2\x80\x9cplaceholder\xe2\x80\x9d that represents \xe2\x80\x9cany region\xe2\x80\x9d. \xe2\x80\xa60BeA proc-macro expander implementation.BoThe <code>range_inclusive_new</code> lang item.0DgSafe <code>#[target_feature]</code> functions are not assignable to \xe2\x80\xa60ClHelper for InferCtxt::ty_or_const_infer_var_changed (see \xe2\x80\xa60CmMeans that code had undefined behavior. We don\xe2\x80\x99t try to \xe2\x80\xa600DhAdds a new generic param to the function using <code>SyntaxEditor</code>DbAdds a tabstop snippet to place the cursor after <code>node</code>CjGenerates <code>assists_generated.md</code> documentation.ClSpecifies whether we want to include associated items in \xe2\x80\xa6000CmReturns the canonical, absolute form of the path with all \xe2\x80\xa6DhEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</codekReturns the module containing <code>local_mod</code>, either the parent \xe2\x80\xa6EhReturns the module containing <code>self</code>, either the parent <code>mod</code>, \xe2\x80\xa61CnDefault debug formatting for this struct (may be useful if \xe2\x80\xa60000000000000000000000000000000000000000000000000000000000000000000000000CmReturns a node which defines this module. That is, a file \xe2\x80\xa600DcSyntactical index of the invoking <code>#[derive]</code> attribute.CkReturns the <code>CrateRootModuleId</code> for this module.DfReturns a <code>Display</code>able type that is human-readable and \xe2\x80\xa60BhCompute the dyn-compatibility of a traitDgIf <code>item</code> has an attribute macro attached to it, expands it.ClCreates a TyFingerprint for looking up an inherent impl. \xe2\x80\xa60CkGenerates a new name that attempts to be unique. Should \xe2\x80\xa60ChTry to get the root URL of the documentation of a crate.DkReturns <code>idx</code>-th argument of this trait reference if it is a \xe2\x80\xa6C`Computes syntax highlighting for the given file.CjComputes all ranges to highlight for a given item in a \xe2\x80\xa6DkEnable searching for <code>Self</code> when the definition is a type or \xe2\x80\xa6CeFinishes the initialization process by sending an \xe2\x80\xa6CnConverts a <code>Utf8PathBuf</code> to a <code>PathBuf</code>.CcReturns true if this is an identifier or a keyword.0DaReturns <code>true</code> if <code>self</code> is heap-allocated.CkChecks whether this syntax kind is a strict keyword for \xe2\x80\xa60CnMaps up the text range out of the expansion hierarchy back \xe2\x80\xa60CnMaps up the text range out of the expansion into its macro \xe2\x80\xa6CnThis module is concerned with finding methods that a given \xe2\x80\xa6CnAttempts to map the node out of macro expanded files. This \xe2\x80\xa6BoThe old, <code>macro_rules! m {}</code> flavor.0CnCalls the passed closure <code>f</code> on all names in scope.DgA macro that mimics the old Salsa-style <code>#[query_group]</code> \xe2\x80\xa6ClRequired features of the target without which it won\xe2\x80\x99t \xe2\x80\xa6CnRuns the build scripts for this <code>ProjectWorkspace</code>.ClReturns the sysroot \xe2\x80\x9csource\xe2\x80\x9d directory, where stdlib \xe2\x80\xa6FbUpdate the <code>path</code> with the given <code>contents</code>. <code>None</code> means the \xe2\x80\xa6BjSkip to next non <code>trivia</code> tokenDkReturns <code>true</code> if errors have been reported since this infcx \xe2\x80\xa60CjThe toolchain version, if known. Used to conditionally \xe2\x80\xa6CiIf completing a function call, ask the editor to show \xe2\x80\xa60EeMerge <code>rhs</code> into <code>lhs</code> keeping both intact. Returned AST is \xe2\x80\xa6DhInvokes <code>try_reserve_exact</code> on the underlying instance of \xe2\x80\xa6DiAdd placeholders like <code>$1</code> and <code>$2</code> in place of \xe2\x80\xa6AoA list of all workspace membersCnWraps the use tree in use tree list with no top level path \xe2\x80\xa6CjAn annotation ID associated with an indel, to describe \xe2\x80\xa6a?00B`The type of the completion item.0CaCrate related data shared by the whole workspace.AoA built-in function-like macro.0gA lint.CkWhether literals encode their kind as an additional u32 \xe2\x80\xa6DfThe <code>#[target_feature]</code> attribute is necessary to check \xe2\x80\xa6EhA <code>CfgOptions</code> that implements <code>Hash</code>, for the sake of hashing \xe2\x80\xa6BlStyle to follow when normalizing a use tree.ClA path can have many generic arguments: each segment may \xe2\x80\xa6CmBounds of the form <code>Type::method(..): Send</code> or \xe2\x80\xa6CjA modifier on a bound, currently this is only used for \xe2\x80\xa6BgThe <code>from_output</code> lang item.0CmAdds a search pattern. For use if you intend to only call \xe2\x80\xa6DcAdds a tabstop snippet to place the cursor before <code>node</code>ClConvenience function to return assists + quick fixes for \xe2\x80\xa6DhReturns a <code>hir::Callable</code> this token is a part of and its \xe2\x80\xa6DfCanonicalizes a query value <code>V</code>. When we canonicalize a \xe2\x80\xa60CcChecks whether the impl satisfies the orphan rules.BgCheck if this range contains an offset.00000CiCheck if types unify eagerly making sure there are no \xe2\x80\xa6CgReturns a node which declares this module, either a \xe2\x80\xa60CnA dummy expander that always errors. This expander is used \xe2\x80\xa6CnEnable borrow checking, this guarantees the outputs of the \xe2\x80\xa6CiThis expands the given macro call, but with different \xe2\x80\xa6DcReturns consecutive <code>Punct</code>s that can be glued together.DhAppends default param values to <code>first</code> if needed. Params \xe2\x80\xa60EhCalls <code>cb</code> on each expression inside <code>expr</code> that is at \xe2\x80\x9ctail \xe2\x80\xa6CfConvert from a bits value, unsetting any unknown bits.00000000000DgDecorates <code>ra_build_cmd</code> to add PGO instrumentation, and \xe2\x80\xa6CnCombines lifetime indicators, type and constant parameters \xe2\x80\xa6BnWhether to inject highlights into doc commentsEdInserts a <code>TextEdit</code> for the given <code>FileId</code>. This properly \xe2\x80\xa60ClThe idea is that we should ensure that the type variable \xe2\x80\xa60BkNB: only valid to call with Output from \xe2\x80\xa60CjChecks that particular type <code>ty</code> implements \xe2\x80\xa6DoResolves the projection <code>&lt;Self as IntoIterator&gt;::IntoIter</code> \xe2\x80\xa6DdConstraints of the form <code>R0 member of [R1, ..., Rn]</code>, \xe2\x80\xa60CkReturns <code>self</code>\xe2\x80\x99s base name and file extension.0CkFinds the first sibling in the given direction which is \xe2\x80\xa6ChAttempts to map the node out of macro expanded files \xe2\x80\xa6CkParser for a format-like string. It is more allowing in \xe2\x80\xa6CnThe randomization seed based on this type\xe2\x80\x99s own repr and \xe2\x80\xa6AkSee <code>README.md</code>.0BeRemoves the corresponding generic argDbResolve known enum from std, like <code>std::result::Result</code>n#[path(ident)]0CnComputes the set of parser level diagnostics for the given \xe2\x80\xa6DcRequest parser level diagnostics for the given <code>FileId</code>.BfSpecifies LLVM data layout to be used.DjReturn the universe that the region <code>r</code> was created in. For \xe2\x80\xa60CmReturns the union of the features of all member crates in \xe2\x80\xa6CjThe workspace-level metadata object. Null if non-existent.AkGet the workspace packages.Bbwhen projecting an associated type0Cghttps://doc.rust-lang.org/stable/error_codes/E0409.htmlBoCurrent API version of the proc-macro protocol.CcInformation about CodeLens, that is to be resolved.BdThe <code>Continue</code> lang item.0CfReturns the result of a macro expansion, including \xe2\x80\xa6CnRepresents an extended macro expansion response, including \xe2\x80\xa6CjSomething that should never happen and is definitely a \xe2\x80\xa600ClWhen we canonicalize a value to form a query, we wind up \xe2\x80\xa60BoPath import for a given name, qualified or not.DgThe inverse of <code>BoundVarReplacer</code>: replaces placeholders \xe2\x80\xa60ClDetect if a goal is stalled on a coroutine that is owned \xe2\x80\xa60CbWhether this projection can be soundly normalized.0CjReturns ancestors of the node at the offset, sorted by \xe2\x80\xa6CmReturns only defs that have generics from themselves, not \xe2\x80\xa6CdReturns an iterator over the direct super traits \xe2\x80\xa6DdReturns a String representation of <code>self</code> that can be \xe2\x80\xa60CfThis does not check the token trees are valid, beware!CbExtracts <code>//^^^ some text</code> annotations.CjFinds a node of specific Ast type at offset. Note that \xe2\x80\xa6CkTools to work with expressions present in format string \xe2\x80\xa6CnGiven a set of generics defined on a type or impl, returns \xe2\x80\xa60BlPoints at the name if there are no generics.00CkReturns the impls from the symbol at <code>position</code>.ChSet for item completions that are private but in the \xe2\x80\xa60C`Returns whether the given crate is a proc macro.B`Iterator of type_or_consts fieldBaFiltering syntax, set in a shell:ClChecks if the given lint is equal or is contained by the \xe2\x80\xa6hReturns:CnBuild a search scope spanning the given module and all its \xe2\x80\xa60DgJust a convenient wrapper of <code>next_region_var</code> for using \xe2\x80\xa60CaDo not activate the <code>default</code> feature.CkReturns the original file range that best describes the \xe2\x80\xa6ClFalls back to the macro call range if the node cannot be \xe2\x80\xa600DjConvert a string to a <code>TokenTree</code>. The spans of the subtree \xe2\x80\xa6CmThis module greps parser\xe2\x80\x99s code for specially formatted \xe2\x80\xa6ChRegister predicates that must hold in order for this \xe2\x80\xa6000CgReturns crates that this file <em>might</em> belong to.DoResolves the item <code>link</code> points to in the scope of <code>def</code>.DdResolve known trait from std, like <code>std::futures::Future</code>DfSearches dependencies of <code>krate</code> for an importable name \xe2\x80\xa60ChKeeps track of which annotations correspond to which \xe2\x80\xa6BiWhether to specialize operator highlightsCkResolve a path as-if it was written at the given scope. \xe2\x80\xa6CkTakes (and clears) the current set of constraints. Note \xe2\x80\xa60BiReturns crates that this file belongs to.DeLike <code>SyntaxMapping::upmap_child</code> but for syntax elements.EoGive a hard error when either <code>&amp;</code> or <code>&#39;_</code> is written. Used to \xe2\x80\xa6CbConfiguration for document symbol search requests.CmThe specific situation where we have an extern crate decl \xe2\x80\xa6BgBuilder for <code>FileSetConfig</code>.CoThe expected lifetimes &amp; types and consts counts can be \xe2\x80\xa6BgThe <code>into_future</code> lang item.0CdZero-sized type used to mark a type parameter as \xe2\x80\xa6CiAn exposing pointer to address cast. A cast between a \xe2\x80\xa60CjAny analysis after borrowck for a given body should be \xe2\x80\xa60BjThe <code>RangeInclusive</code> lang item.0CiThe full set of region constraints gathered up by the \xe2\x80\xa60CbError code indicating that a server received a \xe2\x80\xa6CmA trait import needed for a given associated item access. \xe2\x80\xa6BiThe <code>from_residual</code> lang item.0CnRetrieves all the formatting parts of the format_args! (or \xe2\x80\xa6DiGiven a canonical value <code>C</code> as a starting point, create an \xe2\x80\xa60DiReturns <code>CfgDiff</code> objects that would enable this directive \xe2\x80\xa6ChCreates and return a fresh universe that extends all \xe2\x80\xa60EfChecks that the <code>file</code> has the specified <code>contents</code>. If that \xe2\x80\xa60DkLike <code>Self::extend_with_tt()</code>, but makes sure the new tokens \xe2\x80\xa6BgContains the type the field resolves toDiLike <code>fresh_args_for_item()</code>, but first uses the args from \xe2\x80\xa60C`Gets all of the tracked syntax mappings, if any.DeReturns the type definitions for the symbol at <code>position</code>.CnWe cannot ignore excluded files, because this will lead to \xe2\x80\xa6CgReturns true if the given input is within a macro call.CmMaps the passed in file range down into a macro expansion \xe2\x80\xa6ClBlock expressions accept outer and inner attributes, but \xe2\x80\xa6DnSwitch variance for the purpose of relating <code>a</code> and <code>b</code>.000CkRemoves all crates from this crate graph except for the \xe2\x80\xa60BbRemoves the existing generic paramD`Resolve known struct from std, like <code>std::boxed::Box</code>EhGiven the <code>impl</code> block, attempts to find the trait this <code>impl</code> \xe2\x80\xa6hReturns:EdGiven a <code>fn</code> type, returns an equivalent <code>unsafe fn</code> type; \xe2\x80\xa60CjComputes the set of semantic diagnostics for the given \xe2\x80\xa6DgRequest semantic diagnostics for the given <code>FileId</code>. The \xe2\x80\xa6DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa600000000000AiNormalizes a use item by:DkThe alignment the type would have, ignoring any <code>repr(align)</code>\xe2\x80\xa6CmPath to the user configuration dir. This can be seen as a \xe2\x80\xa6CjA way to control how many assist to resolve during the \xe2\x80\xa600DiAn associated type binding like in <code>Iterator&lt;Item = T&gt;</code>.CkDoc comment desugaring differs between mbe and proc-macros.BgResult of a reference search operation.AoShow the parameter hints popup.ClOutput of the build script and proc-macro building steps \xe2\x80\xa6CcConfiguration for workspace symbol search requests.CiIterates the ancestors of the given node, climbing up \xe2\x80\xa6ChReturns all attributes of this node, including inner \xe2\x80\xa60DhReturns a <code>hir::Callable</code> this token is a part of and its \xe2\x80\xa6CnChecks if a trait is in scope, either because of an import \xe2\x80\xa6EbCanonicalizes a query <em>response</em> <code>V</code>. When we canonicalize a \xe2\x80\xa60DdThe value of <code>#[rust_analyzer::completions(...)]</code>, if \xe2\x80\xa6CdDummy things for testing where spans don\xe2\x80\x99t matter.E`Queries all impls of <code>trait_</code> that may apply to <code>self_ty</code>.CiForks the inference context, creating a new inference \xe2\x80\xa60CkThis rather funky routine is used while processing expected0CmReturns whether this place has any field (aka. non-deref) \xe2\x80\xa60DcFast path helper for testing if a type is <code>Sized</code> or \xe2\x80\xa60CkCreates an instantiation S for the canonical value with \xe2\x80\xa60CiAllows one to apply a instantiation to some subset of \xe2\x80\xa6CmChecks whether this syntax kind is a weak keyword for the \xe2\x80\xa60EfReturns <code>true</code> if the change is <code>Create</code> or <code>Delete</code>.CfThe macro is explicitly disabled due to proc-macro \xe2\x80\xa6EbA mapping from <code>hir_expand::MacroDefId</code> to <code>crate::MacroId</code>.0BoThe cfg options that could be used by the crateDhRuns the build scripts for the given <code>ProjectWorkspace</code>s. \xe2\x80\xa6AjShould locals be excluded.CnSet the \xe2\x80\x9ctainted by errors\xe2\x80\x9d flag to true. We call this \xe2\x80\xa60BnSkip to next non <code>whitespace</code> tokenDf<code>expr_id</code> is required to be an expression id that comes \xe2\x80\xa6CdPreorder walk all the expression\xe2\x80\x99s child patterns.CaErrors that can occur when generating source code0BkThe body of an item (function, const etc.).Dh<code>#[rust_analyzer::completions(ignore_flyimport_methods)]</code> \xe2\x80\xa60CeWhether the item was imported through an explicit \xe2\x80\xa6CiBuilds, and remove the top subtree if it has only one \xe2\x80\xa6BkClears the thread-local trait solver cache.000DjFinds all nodes in <code>file_id</code> whose text is exactly equal to \xe2\x80\xa6ElDowncast from <code>&amp;mut Any</code> to <code>&amp;mut T</code>, without checking the \xe2\x80\xa6EiDowncast from <code>&amp;Any</code> to <code>&amp;T</code>, without checking the type \xe2\x80\xa6CmAdditional arguments for the binary being run, if it is a \xe2\x80\xa6DiLike <code>for_item</code>, but prefers the default of a parameter if \xe2\x80\xa60ClThis function find the AST generic argument from the one \xe2\x80\xa6CgStarts the initialization process by waiting for an \xe2\x80\xa6Eetrue when there is an <code>await.method()</code> or <code>iter().method()</code> \xe2\x80\xa60CkTries to extract an inference variable from a type or a \xe2\x80\xa60DhReturns the <code>SyntaxNode</code> of the module. If this is a file \xe2\x80\xa6AlNB: this clears the databaseDfReturns all <code>TextRange</code>s that correspond to the given span.AkShould imports be excluded.CkMaps local source roots to their parent source roots by \xe2\x80\xa6BlWhether to specialize punctuation highlightsAf#[path = \xe2\x80\x9cstring\xe2\x80\x9d]0DbNormalizes a use tree (see <code>try_normalize_import</code> doc).CkIt also includes the changes that binding mode makes in \xe2\x80\xa6CmA custom proc-macro expander handle. This handle together \xe2\x80\xa6CkThe root ast id always points to the encompassing file, \xe2\x80\xa6ClNON STANDARD: allocates memory with the type\xe2\x80\x99s layout, \xe2\x80\xa60CcTrying to lower a trait function, instead of an \xe2\x80\xa600DaAdds a snippet to move the cursor selected over <code>node</code>DcAdds a tabstop snippet to place the cursor after <code>token</code>CjWhether this error occurred due to a disconnected channel.CjCheck if type unifies with another type eagerly making \xe2\x80\xa6CmReturns a node which defines this module. That is, a file \xe2\x80\xa6ClExpands the macro if it isn\xe2\x80\x99t one of the built-in ones \xe2\x80\xa6EgExtracts <code>TextRange</code> or <code>TextSize</code> depending on the amount of \xe2\x80\xa6CfFind string value for a specific key inside token treeCmType and expressions/patterns path differ in whether they \xe2\x80\xa6DkGiven the <code>impl</code> block, returns the list of associated items \xe2\x80\xa6DiThis should not be used in <code>hir-ty</code>, only in <code>hir</code>.CgFinishes the initialization process as described in \xe2\x80\xa6BfTo be used from <code>hir</code> only.ChAttempts to map the syntax node back up its macro calls.00000CmWhether the type contains some non-lifetime, aka. type or \xe2\x80\xa60EhRelates <code>a</code> and <code>b</code> structurally, calling the relation for all \xe2\x80\xa6000BgA simple line string used for debuggingCiTriggers the parameter hint popup after the assist is \xe2\x80\xa6CaFunctionality for generating trivial constructorsCkgiven a type return the trivial constructor (if one exists)CkCreate a new anonymous lifetime parameter and reference it.BnA delegate used when instantiating bound vars.0ChOld-style <code>macro_rules</code> or the new macros 2.0CjThe opportunistic resolver can be used at any time. It \xe2\x80\xa60CeZero-sized type used to mark a lifetime as covariant.CeZero-sized type used to mark a lifetime as invariant.DdAdds a tabstop snippet to place the cursor before <code>token</code>CkBlocks may not be allocated (if they have no items), so \xe2\x80\xa6hReturns:CmReturns a text range which declares this module, either a \xe2\x80\xa6CjReturns the range which declares this module, either a \xe2\x80\xa6CkReturns the textual content of a doc comment block as a \xe2\x80\xa6EeParses the output of <code>rustdoc -Whelp</code> and prints <code>Lint</code> and \xe2\x80\xa6CnReturns the not-yet-processed and stalled obligations from \xe2\x80\xa60CiThis is set when an import is suggested in a use item \xe2\x80\xa60CnMaps up the text range out of the expansion hierarchy back \xe2\x80\xa6EbFinds nearest non-block ancestor <code>Module</code> (<code>self</code> included).DnReturns <code>true</code> if <code>self</code> would need to be wrapped in \xe2\x80\xa6BkSolve a trait goal using next trait solver.CeRequires imports to match exactly instead of fuzzily.DhInserts whitespace and replaces <code>$crate</code> in macro expansions.00CnUtilities for formatting macro expanded nodes until we get \xe2\x80\xa6DfRenders a <code>SyntaxNode</code> with whitespace inserted between \xe2\x80\xa6AoReplace infer vars with errors.0CjResolves additional completion data at the position given.CnResolves additional completion data at the position given. \xe2\x80\xa6DgWhere possible, replaces type/const variables in <code>value</code> \xe2\x80\xa60DgThe command to run instead of <code>cargo check</code> for building \xe2\x80\xa6EfChecks that the <code>file</code> has the specified <code>contents</code>. If that \xe2\x80\xa6BeIterates its type and const argumentsCfTimes when we replace bound regions with existentials:0CgAn address-to-pointer cast that picks up an exposed \xe2\x80\xa60DoResolves elided lifetimes to <code>&#39;static</code> if there are no other \xe2\x80\xa6CkWhether aliases should be related structurally or not. Used000Bithe crates that we are currently priming.0DiSame as [<code>definition_source</code>] but only returns the file id \xe2\x80\xa6ClDescends the token into expansions, returning the tokens \xe2\x80\xa6CnDetermines the containing syntax node in which to insert a \xe2\x80\xa6AoSuggest name of impl trait typeCnGiven the \xe2\x80\x9cinfo\xe2\x80\x9d about a canonical variable, creates a \xe2\x80\xa60DnIntroduces a new source root. This file <strong>and the following </strong>\xe2\x80\xa6FdReturns true if self is one of <code>return</code>, <code>break</code>, <code>continue</code> or \xe2\x80\xa6ClSearches for importable items with the given name in the \xe2\x80\xa6CiResolves a region var to its value in the unification \xe2\x80\xa60CaRequires imports to by prefix instead of fuzzily.DaRemove the unnecessary braces in current <code>UseTreeList</code>BkEnv is used to derive the trait environmentCgThis may return non-absolute paths if a part of the \xe2\x80\xa6BmThis should be used in <code>hir</code> only.DkConverts a syntax tree to a <code>tt::Subtree</code> using the provided \xe2\x80\xa6EgConverts a <code>tt::Subtree</code> back to a <code>SyntaxNode</code>. The produced \xe2\x80\xa6BeThe list of default workspace membersCcA value to use, when uncertain which limit to pick.CiIterates the ancestors of the given node, climbing up \xe2\x80\xa6DgIf a type can be represented as <code>dyn Trait</code>, returns all \xe2\x80\xa6BfTo be used from <code>hir</code> only.CkThis function finds the AST segment that corresponds to \xe2\x80\xa6CnThis context, but with all transparent expansions filtered \xe2\x80\xa6ClFalls back to the macro call range if the node cannot be \xe2\x80\xa600EhRelates <code>a</code> and <code>b</code> structurally, calling the relation for all \xe2\x80\xa6000CnThis is a method with a heuristics to support test methods \xe2\x80\xa6BcGet the workspace default packages.CjThe <code>panic_null_pointer_dereference</code> lang item.0AmWe\xe2\x80\x99re indexing many crates.0DjDownloads a crate from GitHub, stores it into <code>pgo_dir</code> and \xe2\x80\xa6CcNote: Not to be used directly within hir-def/hir-tyDgParses the unstable book <code>src_dir</code> and prints a constant \xe2\x80\xa6DhIndicate when to squash multiple trees to <code>Many</code> as there \xe2\x80\xa6CkCreates a fresh region variable with the next available \xe2\x80\xa60CnAttempts to map the node out of macro expanded files. This \xe2\x80\xa6CmParses this attribute as a token tree consisting of comma \xe2\x80\xa60CkParses the input token tree as comma separated plain paths.fPanicsDbA \xe2\x80\x9csensible\xe2\x80\x9d <code>.split_closure_args()</code>, where the \xe2\x80\xa60CkWhether aliases should be related structurally. This is \xe2\x80\xa6000CjInvoke <code>cargo check</code> through the RUSTC_WRAPPER.CiZero-sized type used to mark a lifetime as contravariant.CjMaps a node down by mapping its first and last token down.DjFast path helper for primitives which are always <code>Copy</code> and \xe2\x80\xa60CnMaps up the text range out of the expansion hierarchy back \xe2\x80\xa6CmAttempts to resolve this call expression as a method call \xe2\x80\xa6DhA standalone binary for <code>proc-macro-srv</code>. Driver for proc \xe2\x80\xa6DbAdds a snippet to move the cursor selected over <code>nodes</code>DbAdds a snippet to move the cursor selected over <code>token</code>DiGiven <code>original_items</code> retrieved from the trait definition \xe2\x80\xa6DgReturns a String representation of <code>self</code> that shows the \xe2\x80\xa60C`Computes syntax highlighting for the given file.CnThis function find the AST fragment that corresponds to an \xe2\x80\xa6BfTo be used from <code>hir</code> only.CfResolves an int var to a rigid int type, if it was \xe2\x80\xa60Dk\xe2\x80\x98Canonicalizes\xe2\x80\x99 the <code>t</code> by replacing any errors with new \xe2\x80\xa6CmExpand the macro call with a different item as the input, \xe2\x80\xa6CnExpand the macro call with a different token tree, mapping \xe2\x80\xa6Df<code>ty_or_const_infer_var_changed</code> is equivalent to one of \xe2\x80\xa60DiWalks the immediate children expressions and calls <code>f</code> for \xe2\x80\xa6BfAttribute macro expansion is disabled.CnRetrieves the formatting part of the format_args! template \xe2\x80\xa6CgReplaces all bound variables (lifetimes, types, and \xe2\x80\xa60EfInserts a <code>TextEdit</code> and potentially a <code>SnippetEdit</code> for the \xe2\x80\xa60CkReturns the original file range that best describes the \xe2\x80\xa6ClErasedFileAstId used as the span for syntax node fixups. \xe2\x80\xa6CnIterates over associated types that may be specified after \xe2\x80\xa6CiFind an AstNode by offset inside SyntaxNode, if it is \xe2\x80\xa60BoConverts a known mod path to <code>Path</code>.DcQueries whether <code>self_ty</code> has potentially applicable \xe2\x80\xa6DkCollect <code>GenericArgs</code> from the parts of a fn-like path, i.e. \xe2\x80\xa6DgJust a convenient wrapper of <code>next_region_var</code> for using \xe2\x80\xa60CgResolves a float var to a rigid int type, if it was \xe2\x80\xa60DiConvert a string to a <code>TokenTree</code>. The passed span will be \xe2\x80\xa6DkRegister <code>AliasRelate</code> obligation(s) that both types must be \xe2\x80\xa6000CmInsert a hidden type into the opaque type storage, making \xe2\x80\xa60AhSource root of the file.CfWhether to highlight unresolved things be their syntaxCkDescends the token into expansions, returning the first \xe2\x80\xa6;;CnYou cannot call this consecutively, it will only work once \xe2\x80\xa6D`The <code>panic_misaligned_pointer_dereference</code> lang item.0==BkQueries all trait impls for the given type.DiThis should not be used in <code>hir-ty</code>, only in <code>hir</code>.EfChecks if we rename <code>renamed</code> to <code>name</code>, will the meaning of \xe2\x80\xa6DkConverts a syntax tree to a <code>tt::Subtree</code> using the provided \xe2\x80\xa6CmAny toolchain less than this version will likely not work \xe2\x80\xa6BfIndicates whether the struct has a \xe2\x80\xa6ClDescends the token into expansions, returning the tokens \xe2\x80\xa6CnDescends the token into the include expansion, if its file \xe2\x80\xa6CgThe returned function is used in a fast path. If it \xe2\x80\xa60CdSee the comment on OpaqueTypesJank for more details.0DgScan the constraints produced since <code>snapshot</code> and check \xe2\x80\xa6DaSee <code>InferCtxt::region_constraints_added_in_snapshot</code>.10AoIterates over inherent methods.DeDeeply normalize all aliases in <code>value</code>. This does not \xe2\x80\xa60CnRetrieves the formatting part of the format_args! template \xe2\x80\xa6CiAllows you to treat inherent and non-inherent methods \xe2\x80\xa6ClFalls back to the macro call range if the node cannot be \xe2\x80\xa600EhChecks if we rename <code>renamed</code> (currently named <code>current_name</code>) \xe2\x80\xa644")