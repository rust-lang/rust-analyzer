(function() {
    var type_impls = Object.fromEntries([["hir",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_map\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unchecked_map</a>&lt;W&gt;(self, map_op: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(V) -&gt; W) -&gt; Canonical&lt;I, W&gt;</h4></section></summary><div class=\"docblock\"><p>Allows you to map the <code>value</code> of a canonical while keeping the\nsame set of bound variables.</p>\n<p><strong>WARNING:</strong> This function is very easy to mis-use, hence the\nname!  In particular, the new value <code>W</code> must use all <strong>the\nsame type/region variables</strong> in <strong>precisely the same order</strong>\nas the original! (The ordering is defined by the\n<code>TypeFoldable</code> implementation of the type in question.)</p>\n<p>An example of a <strong>correct</strong> use of this:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>a: Canonical&lt;I, T&gt; = ...;\n<span class=\"kw\">let </span>b: Canonical&lt;I, (T,)&gt; = a.unchecked_map(|v| (v, ));</code></pre></div>\n<p>An example of an <strong>incorrect</strong> use of this:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>a: Canonical&lt;I, T&gt; = ...;\n<span class=\"kw\">let </span>ty: Ty&lt;I&gt; = ...;\n<span class=\"kw\">let </span>b: Canonical&lt;I, (T, Ty&lt;I&gt;)&gt; = a.unchecked_map(|v| (v, ty));</code></pre></div></div></details></div></details>",0,"hir::next_solver::Canonical"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CanonicalExt%3C'db,+V%3E-for-Canonical%3CDbInterner%3C'db%3E,+V%3E\" class=\"impl\"><a href=\"#impl-CanonicalExt%3C'db,+V%3E-for-Canonical%3CDbInterner%3C'db%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'db, V&gt; <a class=\"trait\" href=\"hir/next_solver/infer/canonical/instantiate/trait.CanonicalExt.html\" title=\"trait hir::next_solver::infer::canonical::instantiate::CanonicalExt\">CanonicalExt</a>&lt;'db, V&gt; for Canonical&lt;<a class=\"struct\" href=\"hir/next_solver/struct.DbInterner.html\" title=\"struct hir::next_solver::DbInterner\">DbInterner</a>&lt;'db&gt;, V&gt;</h3><div class=\"docblock\"><p>FIXME(-Znext-solver): This or public because it is shared with the\nnew trait solver implementation. We should deduplicate canonicalization.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.instantiate\" class=\"method trait-impl\"><a href=\"#method.instantiate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hir/next_solver/infer/canonical/instantiate/trait.CanonicalExt.html#tymethod.instantiate\" class=\"fn\">instantiate</a>(\n    &amp;self,\n    tcx: <a class=\"struct\" href=\"hir/next_solver/struct.DbInterner.html\" title=\"struct hir::next_solver::DbInterner\">DbInterner</a>&lt;'db&gt;,\n    var_values: &amp;CanonicalVarValues&lt;<a class=\"struct\" href=\"hir/next_solver/struct.DbInterner.html\" title=\"struct hir::next_solver::DbInterner\">DbInterner</a>&lt;'db&gt;&gt;,\n) -&gt; V<div class=\"where\">where\n    V: TypeFoldable&lt;<a class=\"struct\" href=\"hir/next_solver/struct.DbInterner.html\" title=\"struct hir::next_solver::DbInterner\">DbInterner</a>&lt;'db&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Instantiate the wrapped value, replacing each canonical value\nwith the value given in <code>var_values</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.instantiate_projected\" class=\"method trait-impl\"><a href=\"#method.instantiate_projected\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hir/next_solver/infer/canonical/instantiate/trait.CanonicalExt.html#tymethod.instantiate_projected\" class=\"fn\">instantiate_projected</a>&lt;T&gt;(\n    &amp;self,\n    tcx: <a class=\"struct\" href=\"hir/next_solver/struct.DbInterner.html\" title=\"struct hir::next_solver::DbInterner\">DbInterner</a>&lt;'db&gt;,\n    var_values: &amp;CanonicalVarValues&lt;<a class=\"struct\" href=\"hir/next_solver/struct.DbInterner.html\" title=\"struct hir::next_solver::DbInterner\">DbInterner</a>&lt;'db&gt;&gt;,\n    projection_fn: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;V</a>) -&gt; T,\n) -&gt; T<div class=\"where\">where\n    T: TypeFoldable&lt;<a class=\"struct\" href=\"hir/next_solver/struct.DbInterner.html\" title=\"struct hir::next_solver::DbInterner\">DbInterner</a>&lt;'db&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Allows one to apply a instantiation to some subset of\n<code>self.value</code>. Invoke <code>projection_fn</code> with <code>self.value</code> to get\na value V that is expressed in terms of the same canonical\nvariables bound in <code>self</code> (usually this extracts from subset\nof <code>self</code>). Apply the instantiation <code>var_values</code> to this value\nV, replacing each of the canonical variables.</p>\n</div></details></div></details>","CanonicalExt<'db, V>","hir::next_solver::Canonical"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Canonical&lt;I, V&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.91.0/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","hir::next_solver::Canonical"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, __f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.91.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","hir::next_solver::Canonical"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Display-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.91.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","hir::next_solver::Canonical"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Hash-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, __state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.91.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","hir::next_solver::Canonical"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, __other: &amp;Canonical&lt;I, V&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.91.0/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","hir::next_solver::Canonical"],["<section id=\"impl-Copy-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Copy-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","hir::next_solver::Canonical"],["<section id=\"impl-Eq-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","hir::next_solver::Canonical"]]],["hir_ty",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_map\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unchecked_map</a>&lt;W&gt;(self, map_op: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(V) -&gt; W) -&gt; Canonical&lt;I, W&gt;</h4></section></summary><div class=\"docblock\"><p>Allows you to map the <code>value</code> of a canonical while keeping the\nsame set of bound variables.</p>\n<p><strong>WARNING:</strong> This function is very easy to mis-use, hence the\nname!  In particular, the new value <code>W</code> must use all <strong>the\nsame type/region variables</strong> in <strong>precisely the same order</strong>\nas the original! (The ordering is defined by the\n<code>TypeFoldable</code> implementation of the type in question.)</p>\n<p>An example of a <strong>correct</strong> use of this:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>a: Canonical&lt;I, T&gt; = ...;\n<span class=\"kw\">let </span>b: Canonical&lt;I, (T,)&gt; = a.unchecked_map(|v| (v, ));</code></pre></div>\n<p>An example of an <strong>incorrect</strong> use of this:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>a: Canonical&lt;I, T&gt; = ...;\n<span class=\"kw\">let </span>ty: Ty&lt;I&gt; = ...;\n<span class=\"kw\">let </span>b: Canonical&lt;I, (T, Ty&lt;I&gt;)&gt; = a.unchecked_map(|v| (v, ty));</code></pre></div></div></details></div></details>",0,"hir_ty::next_solver::Canonical"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Canonical&lt;I, V&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.91.0/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","hir_ty::next_solver::Canonical"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, __f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.91.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","hir_ty::next_solver::Canonical"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Display-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.91.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","hir_ty::next_solver::Canonical"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Hash-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, __state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.91.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","hir_ty::next_solver::Canonical"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, __other: &amp;Canonical&lt;I, V&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.91.0/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","hir_ty::next_solver::Canonical"],["<section id=\"impl-Copy-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Copy-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","hir_ty::next_solver::Canonical"],["<section id=\"impl-Eq-for-Canonical%3CI,+V%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Canonical%3CI,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Canonical&lt;I, V&gt;<div class=\"where\">where\n    I: Interner,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","hir_ty::next_solver::Canonical"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[17899,14126]}