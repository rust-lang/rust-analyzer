(function() {
    var type_impls = Object.fromEntries([["syntax",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-SyntaxToken%3CL%3E\" class=\"impl\"><a href=\"#impl-Clone-for-SyntaxToken%3CL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for SyntaxToken&lt;L&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + Language,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; SyntaxToken&lt;L&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.91.0/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","syntax::syntax_node::SyntaxToken"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-SyntaxToken%3CL%3E\" class=\"impl\"><a href=\"#impl-Debug-for-SyntaxToken%3CL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for SyntaxToken&lt;L&gt;<div class=\"where\">where\n    L: Language,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.91.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","syntax::syntax_node::SyntaxToken"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-SyntaxToken%3CL%3E\" class=\"impl\"><a href=\"#impl-Display-for-SyntaxToken%3CL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for SyntaxToken&lt;L&gt;<div class=\"where\">where\n    L: Language,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.91.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","syntax::syntax_node::SyntaxToken"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSyntaxToken%3E-for-SyntaxToken%3CL%3E\" class=\"impl\"><a href=\"#impl-From%3CSyntaxToken%3E-for-SyntaxToken%3CL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SyntaxToken&gt; for SyntaxToken&lt;L&gt;<div class=\"where\">where\n    L: Language,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(raw: SyntaxToken) -&gt; SyntaxToken&lt;L&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SyntaxToken>","syntax::syntax_node::SyntaxToken"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-SyntaxToken%3CL%3E\" class=\"impl\"><a href=\"#impl-Hash-for-SyntaxToken%3CL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for SyntaxToken&lt;L&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + Language,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.91.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","syntax::syntax_node::SyntaxToken"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-SyntaxToken%3CL%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-SyntaxToken%3CL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for SyntaxToken&lt;L&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + Language,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;SyntaxToken&lt;L&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.91.0/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","syntax::syntax_node::SyntaxToken"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SyntaxToken%3CL%3E\" class=\"impl\"><a href=\"#impl-SyntaxToken%3CL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L&gt; SyntaxToken&lt;L&gt;<div class=\"where\">where\n    L: Language,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace_with\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">replace_with</a>(&amp;self, new_token: GreenToken) -&gt; <a class=\"struct\" href=\"syntax/struct.GreenNode.html\" title=\"struct syntax::GreenNode\">GreenNode</a></h4></section></summary><div class=\"docblock\"><p>Returns a green tree, equal to the green tree this token\nbelongs two, except with this token substitute. The complexity\nof operation is proportional to the depth of the tree</p>\n</div></details><section id=\"method.kind\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kind</a>(&amp;self) -&gt; &lt;L as Language&gt;::Kind</h4></section><section id=\"method.text_range\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">text_range</a>(&amp;self) -&gt; <a class=\"struct\" href=\"syntax/struct.TextRange.html\" title=\"struct syntax::TextRange\">TextRange</a></h4></section><section id=\"method.index\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">index</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.text\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">text</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.str.html\">str</a></h4></section><section id=\"method.green\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">green</a>(&amp;self) -&gt; &amp;GreenTokenData</h4></section><section id=\"method.parent\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">parent</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.91.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;SyntaxNode&lt;L&gt;&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.ancestors\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">ancestors</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = SyntaxNode&lt;L&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: use <code>SyntaxToken::parent_ancestors</code> instead</span></div></span></summary><div class=\"docblock\"><p>Iterator over all the ancestors of this token excluding itself.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parent_ancestors\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">parent_ancestors</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = SyntaxNode&lt;L&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Iterator over all the ancestors of this token excluding itself.</p>\n</div></details><section id=\"method.next_sibling_or_token\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">next_sibling_or_token</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.91.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"syntax/enum.NodeOrToken.html\" title=\"enum syntax::NodeOrToken\">NodeOrToken</a>&lt;SyntaxNode&lt;L&gt;, SyntaxToken&lt;L&gt;&gt;&gt;</h4></section><section id=\"method.prev_sibling_or_token\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">prev_sibling_or_token</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.91.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"syntax/enum.NodeOrToken.html\" title=\"enum syntax::NodeOrToken\">NodeOrToken</a>&lt;SyntaxNode&lt;L&gt;, SyntaxToken&lt;L&gt;&gt;&gt;</h4></section><section id=\"method.siblings_with_tokens\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">siblings_with_tokens</a>(\n    &amp;self,\n    direction: <a class=\"enum\" href=\"syntax/enum.Direction.html\" title=\"enum syntax::Direction\">Direction</a>,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"syntax/enum.NodeOrToken.html\" title=\"enum syntax::NodeOrToken\">NodeOrToken</a>&lt;SyntaxNode&lt;L&gt;, SyntaxToken&lt;L&gt;&gt;&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_token\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">next_token</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.91.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;SyntaxToken&lt;L&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Next token in the tree (i.e, not necessary a sibling).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prev_token\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">prev_token</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.91.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;SyntaxToken&lt;L&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Previous token in the tree (i.e, not necessary a sibling).</p>\n</div></details><section id=\"method.detach\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">detach</a>(&amp;self)</h4></section></div></details>",0,"syntax::syntax_node::SyntaxToken"],["<section id=\"impl-Eq-for-SyntaxToken%3CL%3E\" class=\"impl\"><a href=\"#impl-Eq-for-SyntaxToken%3CL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for SyntaxToken&lt;L&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + Language,</div></h3></section>","Eq","syntax::syntax_node::SyntaxToken"],["<section id=\"impl-StructuralPartialEq-for-SyntaxToken%3CL%3E\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-SyntaxToken%3CL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for SyntaxToken&lt;L&gt;<div class=\"where\">where\n    L: Language,</div></h3></section>","StructuralPartialEq","syntax::syntax_node::SyntaxToken"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[18861]}