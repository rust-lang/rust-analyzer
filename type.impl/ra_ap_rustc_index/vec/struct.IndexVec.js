(function() {
    var type_impls = Object.fromEntries([["hir",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3CIndexSlice%3CI,+T%3E%3E-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-Borrow%3CIndexSlice%3CI,+T%3E%3E-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;IndexSlice&lt;I, T&gt;&gt; for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;IndexSlice&lt;I, T&gt;</h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/1.91.0/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<IndexSlice<I, T>>","hir::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowMut%3CIndexSlice%3CI,+T%3E%3E-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-BorrowMut%3CIndexSlice%3CI,+T%3E%3E-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/borrow/trait.BorrowMut.html\" title=\"trait core::borrow::BorrowMut\">BorrowMut</a>&lt;IndexSlice&lt;I, T&gt;&gt; for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; &amp;mut IndexSlice&lt;I, T&gt;</h4></section></summary><div class='docblock'>Mutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/1.91.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details>","BorrowMut<IndexSlice<I, T>>","hir::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-Clone-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + Idx,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; IndexVec&lt;I, T&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.91.0/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","hir::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-Debug-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.91.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","hir::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-Default-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; IndexVec&lt;I, T&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","hir::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-Deref-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.91.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = IndexSlice&lt;I, T&gt;</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;&lt;IndexVec&lt;I, T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","hir::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-DerefMut-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a href=\"#method.deref_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/ops/deref/trait.DerefMut.html#tymethod.deref_mut\" class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; &amp;mut &lt;IndexVec&lt;I, T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Mutably dereferences the value.</div></details></div></details>","DerefMut","hir::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CT%3E-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-Extend%3CT%3E-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;T&gt; for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;J&gt;(&amp;mut self, iter: J)<div class=\"where\">where\n    J: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.91.0/src/core/iter/traits/collect.rs.html#417\">Source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.91.0/src/core/iter/traits/collect.rs.html#425\">Source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<T>","hir::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+N%5D%3E-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-From%3C%5BT;+N%5D%3E-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.array.html\">[T; N]</a>&gt; for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.array.html\">[T; N]</a>) -&gt; IndexVec&lt;I, T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; N]>","hir::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CT%3E-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-FromIterator%3CT%3E-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;T&gt; for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;J&gt;(iter: J) -&gt; IndexVec&lt;I, T&gt;<div class=\"where\">where\n    J: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<T>","hir::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-Hash-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + Idx,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.91.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","hir::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">new</a>() -&gt; IndexVec&lt;I, T&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new, empty <code>IndexVec&lt;I, T&gt;</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">from_raw</a>(raw: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;) -&gt; IndexVec&lt;I, T&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>IndexVec&lt;I, T&gt;</code> from a <code>Vec&lt;T&gt;</code>.</p>\n</div></details><section id=\"method.with_capacity\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.usize.html\">usize</a>) -&gt; IndexVec&lt;I, T&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_elem\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_elem</a>&lt;S&gt;(elem: T, universe: &amp;IndexSlice&lt;I, S&gt;) -&gt; IndexVec&lt;I, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new vector with a copy of <code>elem</code> for each index in <code>universe</code>.</p>\n<p>Thus <code>IndexVec::from_elem(elem, &amp;universe)</code> is equivalent to\n<code>IndexVec::&lt;I, _&gt;::from_elem_n(elem, universe.len())</code>. That can help\ntype inference as it ensures that the resulting vector uses the same\nindex type as <code>universe</code>, rather than something potentially surprising.</p>\n<p>For example, if you want to store data for each local in a MIR body,\nusing <code>let mut uses = IndexVec::from_elem(vec![], &amp;body.local_decls);</code>\nensures that <code>uses</code> is an <code>IndexVec&lt;Local, _&gt;</code>, and thus can give\nbetter error messages later if one accidentally mismatches indices.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_elem_n\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_elem_n</a>(elem: T, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.usize.html\">usize</a>) -&gt; IndexVec&lt;I, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new IndexVec with n copies of the <code>elem</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_fn_n\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_fn_n</a>(func: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(I) -&gt; T, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.usize.html\">usize</a>) -&gt; IndexVec&lt;I, T&gt;</h4></section></summary><div class=\"docblock\"><p>Create an <code>IndexVec</code> with <code>n</code> elements, where the value of each\nelement is the result of <code>func(i)</code>. (The underlying vector will\nbe allocated only once, with a capacity of at least <code>n</code>.)</p>\n</div></details><section id=\"method.as_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;IndexSlice&lt;I, T&gt;</h4></section><section id=\"method.as_mut_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_slice</a>(&amp;mut self) -&gt; &amp;mut IndexSlice&lt;I, T&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">push</a>(&amp;mut self, d: T) -&gt; I</h4></section></summary><div class=\"docblock\"><p>Pushes an element to the array returning the index where it was pushed to.</p>\n</div></details><section id=\"method.pop\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.91.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section><section id=\"method.into_iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section><section id=\"method.into_iter_enumerated\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">into_iter_enumerated</a>(\n    self,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = T&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section><section id=\"method.drain_enumerated\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain_enumerated</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(I, T)</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section><section id=\"method.shrink_to_fit\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">shrink_to_fit</a>(&amp;mut self)</h4></section><section id=\"method.truncate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">truncate</a>(&amp;mut self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.usize.html\">usize</a>)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.ensure_contains_elem\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">ensure_contains_elem</a>(\n    &amp;mut self,\n    elem: I,\n    fill_value: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>() -&gt; T,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\"><p>Grows the index vector so that it contains an entry for\n<code>elem</code>; if that is already true, then has no\neffect. Otherwise, inserts new values as needed by invoking\n<code>fill_value</code>.</p>\n<p>Returns a reference to the <code>elem</code> entry.</p>\n</div></details><section id=\"method.resize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">resize</a>(&amp;mut self, new_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.usize.html\">usize</a>, value: T)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section><section id=\"method.resize_to_elem\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">resize_to_elem</a>(&amp;mut self, elem: I, fill_value: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>() -&gt; T)</h4></section><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>(&amp;mut self, other: &amp;mut IndexVec&lt;I, T&gt;)</h4></section></div></details>",0,"hir::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-IntoIterator-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","hir::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + Idx,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;IndexVec&lt;I, T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.91.0/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","hir::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeFoldable%3CI%3E-for-IndexVec%3CIx,+T%3E\" class=\"impl\"><a href=\"#impl-TypeFoldable%3CI%3E-for-IndexVec%3CIx,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T, Ix&gt; TypeFoldable&lt;I&gt; for IndexVec&lt;Ix, T&gt;<div class=\"where\">where\n    I: Interner,\n    T: TypeFoldable&lt;I&gt;,\n    Ix: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fold_with\" class=\"method trait-impl\"><a href=\"#method.try_fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_fold_with</a>&lt;F&gt;(\n    self,\n    folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;mut F</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.91.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;IndexVec&lt;Ix, T&gt;, &lt;F as FallibleTypeFolder&lt;I&gt;&gt;::Error&gt;<div class=\"where\">where\n    F: FallibleTypeFolder&lt;I&gt;,</div></h4></section></summary><div class='docblock'>The entry point for folding. To fold a value <code>t</code> with a folder <code>f</code>\ncall: <code>t.try_fold_with(f)</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold_with\" class=\"method trait-impl\"><a href=\"#method.fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fold_with</a>&lt;F&gt;(self, folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;mut F</a>) -&gt; IndexVec&lt;Ix, T&gt;<div class=\"where\">where\n    F: TypeFolder&lt;I&gt;,</div></h4></section></summary><div class='docblock'>The entry point for folding. To fold a value <code>t</code> with a folder <code>f</code>\ncall: <code>t.fold_with(f)</code>. <a>Read more</a></div></details></div></details>","TypeFoldable<I>","hir::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeVisitable%3CI%3E-for-IndexVec%3CIx,+T%3E\" class=\"impl\"><a href=\"#impl-TypeVisitable%3CI%3E-for-IndexVec%3CIx,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T, Ix&gt; TypeVisitable&lt;I&gt; for IndexVec&lt;Ix, T&gt;<div class=\"where\">where\n    I: Interner,\n    T: TypeVisitable&lt;I&gt;,\n    Ix: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_with\" class=\"method trait-impl\"><a href=\"#method.visit_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_with</a>&lt;V&gt;(&amp;self, visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;mut V</a>) -&gt; &lt;V as TypeVisitor&lt;I&gt;&gt;::Result<div class=\"where\">where\n    V: TypeVisitor&lt;I&gt;,</div></h4></section></summary><div class='docblock'>The entry point for visiting. To visit a value <code>t</code> with a visitor <code>v</code>\ncall: <code>t.visit_with(v)</code>. <a>Read more</a></div></details></div></details>","TypeVisitable<I>","hir::next_solver::infer::region_constraints::VarInfos"],["<section id=\"impl-Eq-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-Eq-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + Idx,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","hir::next_solver::infer::region_constraints::VarInfos"],["<section id=\"impl-Send-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-Send-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section>","Send","hir::next_solver::infer::region_constraints::VarInfos"],["<section id=\"impl-StructuralPartialEq-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section>","StructuralPartialEq","hir::next_solver::infer::region_constraints::VarInfos"]]],["hir_ty",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3CIndexSlice%3CI,+T%3E%3E-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-Borrow%3CIndexSlice%3CI,+T%3E%3E-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;IndexSlice&lt;I, T&gt;&gt; for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;IndexSlice&lt;I, T&gt;</h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/1.91.0/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<IndexSlice<I, T>>","hir_ty::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowMut%3CIndexSlice%3CI,+T%3E%3E-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-BorrowMut%3CIndexSlice%3CI,+T%3E%3E-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/borrow/trait.BorrowMut.html\" title=\"trait core::borrow::BorrowMut\">BorrowMut</a>&lt;IndexSlice&lt;I, T&gt;&gt; for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; &amp;mut IndexSlice&lt;I, T&gt;</h4></section></summary><div class='docblock'>Mutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/1.91.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details>","BorrowMut<IndexSlice<I, T>>","hir_ty::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-Clone-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + Idx,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; IndexVec&lt;I, T&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.91.0/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","hir_ty::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-Debug-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.91.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.91.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","hir_ty::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-Default-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; IndexVec&lt;I, T&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","hir_ty::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-Deref-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.91.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = IndexSlice&lt;I, T&gt;</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;&lt;IndexVec&lt;I, T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","hir_ty::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-DerefMut-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a href=\"#method.deref_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/ops/deref/trait.DerefMut.html#tymethod.deref_mut\" class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; &amp;mut &lt;IndexVec&lt;I, T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Mutably dereferences the value.</div></details></div></details>","DerefMut","hir_ty::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CT%3E-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-Extend%3CT%3E-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;T&gt; for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;J&gt;(&amp;mut self, iter: J)<div class=\"where\">where\n    J: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.91.0/src/core/iter/traits/collect.rs.html#417\">Source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.91.0/src/core/iter/traits/collect.rs.html#425\">Source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<T>","hir_ty::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+N%5D%3E-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-From%3C%5BT;+N%5D%3E-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.array.html\">[T; N]</a>&gt; for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.array.html\">[T; N]</a>) -&gt; IndexVec&lt;I, T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; N]>","hir_ty::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CT%3E-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-FromIterator%3CT%3E-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;T&gt; for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;J&gt;(iter: J) -&gt; IndexVec&lt;I, T&gt;<div class=\"where\">where\n    J: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<T>","hir_ty::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-Hash-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + Idx,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.91.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.91.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","hir_ty::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">new</a>() -&gt; IndexVec&lt;I, T&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new, empty <code>IndexVec&lt;I, T&gt;</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">from_raw</a>(raw: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;) -&gt; IndexVec&lt;I, T&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>IndexVec&lt;I, T&gt;</code> from a <code>Vec&lt;T&gt;</code>.</p>\n</div></details><section id=\"method.with_capacity\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.usize.html\">usize</a>) -&gt; IndexVec&lt;I, T&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_elem\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_elem</a>&lt;S&gt;(elem: T, universe: &amp;IndexSlice&lt;I, S&gt;) -&gt; IndexVec&lt;I, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new vector with a copy of <code>elem</code> for each index in <code>universe</code>.</p>\n<p>Thus <code>IndexVec::from_elem(elem, &amp;universe)</code> is equivalent to\n<code>IndexVec::&lt;I, _&gt;::from_elem_n(elem, universe.len())</code>. That can help\ntype inference as it ensures that the resulting vector uses the same\nindex type as <code>universe</code>, rather than something potentially surprising.</p>\n<p>For example, if you want to store data for each local in a MIR body,\nusing <code>let mut uses = IndexVec::from_elem(vec![], &amp;body.local_decls);</code>\nensures that <code>uses</code> is an <code>IndexVec&lt;Local, _&gt;</code>, and thus can give\nbetter error messages later if one accidentally mismatches indices.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_elem_n\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_elem_n</a>(elem: T, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.usize.html\">usize</a>) -&gt; IndexVec&lt;I, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new IndexVec with n copies of the <code>elem</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_fn_n\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_fn_n</a>(func: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(I) -&gt; T, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.usize.html\">usize</a>) -&gt; IndexVec&lt;I, T&gt;</h4></section></summary><div class=\"docblock\"><p>Create an <code>IndexVec</code> with <code>n</code> elements, where the value of each\nelement is the result of <code>func(i)</code>. (The underlying vector will\nbe allocated only once, with a capacity of at least <code>n</code>.)</p>\n</div></details><section id=\"method.as_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;IndexSlice&lt;I, T&gt;</h4></section><section id=\"method.as_mut_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_slice</a>(&amp;mut self) -&gt; &amp;mut IndexSlice&lt;I, T&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">push</a>(&amp;mut self, d: T) -&gt; I</h4></section></summary><div class=\"docblock\"><p>Pushes an element to the array returning the index where it was pushed to.</p>\n</div></details><section id=\"method.pop\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.91.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section><section id=\"method.into_iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section><section id=\"method.into_iter_enumerated\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">into_iter_enumerated</a>(\n    self,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = T&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section><section id=\"method.drain_enumerated\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain_enumerated</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(I, T)</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section><section id=\"method.shrink_to_fit\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">shrink_to_fit</a>(&amp;mut self)</h4></section><section id=\"method.truncate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">truncate</a>(&amp;mut self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.usize.html\">usize</a>)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.ensure_contains_elem\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">ensure_contains_elem</a>(\n    &amp;mut self,\n    elem: I,\n    fill_value: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>() -&gt; T,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\"><p>Grows the index vector so that it contains an entry for\n<code>elem</code>; if that is already true, then has no\neffect. Otherwise, inserts new values as needed by invoking\n<code>fill_value</code>.</p>\n<p>Returns a reference to the <code>elem</code> entry.</p>\n</div></details><section id=\"method.resize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">resize</a>(&amp;mut self, new_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.usize.html\">usize</a>, value: T)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section><section id=\"method.resize_to_elem\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">resize_to_elem</a>(&amp;mut self, elem: I, fill_value: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>() -&gt; T)</h4></section><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>(&amp;mut self, other: &amp;mut IndexVec&lt;I, T&gt;)</h4></section></div></details>",0,"hir_ty::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-IntoIterator-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","hir_ty::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + Idx,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;IndexVec&lt;I, T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.91.0/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","hir_ty::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeFoldable%3CI%3E-for-IndexVec%3CIx,+T%3E\" class=\"impl\"><a href=\"#impl-TypeFoldable%3CI%3E-for-IndexVec%3CIx,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T, Ix&gt; TypeFoldable&lt;I&gt; for IndexVec&lt;Ix, T&gt;<div class=\"where\">where\n    I: Interner,\n    T: TypeFoldable&lt;I&gt;,\n    Ix: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fold_with\" class=\"method trait-impl\"><a href=\"#method.try_fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_fold_with</a>&lt;F&gt;(\n    self,\n    folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;mut F</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.91.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;IndexVec&lt;Ix, T&gt;, &lt;F as FallibleTypeFolder&lt;I&gt;&gt;::Error&gt;<div class=\"where\">where\n    F: FallibleTypeFolder&lt;I&gt;,</div></h4></section></summary><div class='docblock'>The entry point for folding. To fold a value <code>t</code> with a folder <code>f</code>\ncall: <code>t.try_fold_with(f)</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold_with\" class=\"method trait-impl\"><a href=\"#method.fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fold_with</a>&lt;F&gt;(self, folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;mut F</a>) -&gt; IndexVec&lt;Ix, T&gt;<div class=\"where\">where\n    F: TypeFolder&lt;I&gt;,</div></h4></section></summary><div class='docblock'>The entry point for folding. To fold a value <code>t</code> with a folder <code>f</code>\ncall: <code>t.fold_with(f)</code>. <a>Read more</a></div></details></div></details>","TypeFoldable<I>","hir_ty::next_solver::infer::region_constraints::VarInfos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeVisitable%3CI%3E-for-IndexVec%3CIx,+T%3E\" class=\"impl\"><a href=\"#impl-TypeVisitable%3CI%3E-for-IndexVec%3CIx,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T, Ix&gt; TypeVisitable&lt;I&gt; for IndexVec&lt;Ix, T&gt;<div class=\"where\">where\n    I: Interner,\n    T: TypeVisitable&lt;I&gt;,\n    Ix: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_with\" class=\"method trait-impl\"><a href=\"#method.visit_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_with</a>&lt;V&gt;(&amp;self, visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.reference.html\">&amp;mut V</a>) -&gt; &lt;V as TypeVisitor&lt;I&gt;&gt;::Result<div class=\"where\">where\n    V: TypeVisitor&lt;I&gt;,</div></h4></section></summary><div class='docblock'>The entry point for visiting. To visit a value <code>t</code> with a visitor <code>v</code>\ncall: <code>t.visit_with(v)</code>. <a>Read more</a></div></details></div></details>","TypeVisitable<I>","hir_ty::next_solver::infer::region_constraints::VarInfos"],["<section id=\"impl-Eq-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-Eq-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + Idx,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","hir_ty::next_solver::infer::region_constraints::VarInfos"],["<section id=\"impl-Send-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-Send-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section>","Send","hir_ty::next_solver::infer::region_constraints::VarInfos"],["<section id=\"impl-StructuralPartialEq-for-IndexVec%3CI,+T%3E\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-IndexVec%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for IndexVec&lt;I, T&gt;<div class=\"where\">where\n    I: Idx,</div></h3></section>","StructuralPartialEq","hir_ty::next_solver::infer::region_constraints::VarInfos"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[39921,39982]}